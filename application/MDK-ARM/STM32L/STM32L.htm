<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [STM32L\STM32L.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image STM32L\STM32L.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue May 21 18:15:25 2024
<BR><P>
<H3>Maximum Stack Usage =       2852 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
moduleResponParaser &rArr; n58TCPRecvParser &rArr; protocolReceivePush &rArr; protocolRxParser &rArr; instructionParser &rArr; doinstruction &rArr; doDebugInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC1_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC1_COMP_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[e]">DMA1_Channel1_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[f]">DMA1_Channel2_3_IRQHandler</a> from stm32l0xx_it.o(i.DMA1_Channel2_3_IRQHandler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[10]">DMA1_Channel4_5_6_7_IRQHandler</a> from stm32l0xx_it.o(i.DMA1_Channel4_5_6_7_IRQHandler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from stm32l0xx_it.o(i.EXTI4_15_IRQHandler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32l0xx_it.o(i.HardFault_Handler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[1b]">I2C1_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[1c]">I2C2_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[19]">I2C3_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[12]">LPTIM1_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[21]">LPUART1_IRQHandler</a> from stm32l0xx_it.o(i.LPUART1_IRQHandler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[3e]">N58enterNormalMode</a> from app_net.o(i.N58enterNormalMode) referenced from app_net.o(i.networkConnectProcess)
 <LI><a href="#[1]">NMI_Handler</a> from stm32l0xx_it.o(i.NMI_Handler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from stm32l0xx_it.o(i.PendSV_Handler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from stm32l0xx_it.o(i.RTC_IRQHandler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[1d]">SPI1_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[1e]">SPI2_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from stm32l0xx_it.o(i.SVC_Handler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from stm32l0xx_it.o(i.SysTick_Handler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[23]">SystemInit</a> from system_stm32l0xx.o(i.SystemInit) referenced from startup_stm32l071xx.o(.text)
 <LI><a href="#[18]">TIM21_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[1a]">TIM22_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[14]">TIM2_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[15]">TIM3_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[16]">TIM6_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[17]">TIM7_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[28]">UART_DMAAbortOnError</a> from stm32l0xx_hal_uart.o(i.UART_DMAAbortOnError) referenced from stm32l0xx_hal_uart.o(i.HAL_UART_IRQHandler)
 <LI><a href="#[2b]">UART_DMAError</a> from stm32l0xx_hal_uart.o(i.UART_DMAError) referenced from stm32l0xx_hal_uart.o(i.UART_Start_Receive_DMA)
 <LI><a href="#[29]">UART_DMAReceiveCplt</a> from stm32l0xx_hal_uart.o(i.UART_DMAReceiveCplt) referenced from stm32l0xx_hal_uart.o(i.UART_Start_Receive_DMA)
 <LI><a href="#[2a]">UART_DMARxHalfCplt</a> from stm32l0xx_hal_uart.o(i.UART_DMARxHalfCplt) referenced from stm32l0xx_hal_uart.o(i.UART_Start_Receive_DMA)
 <LI><a href="#[1f]">USART1_IRQHandler</a> from stm32l0xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[20]">USART2_IRQHandler</a> from stm32l0xx_it.o(i.USART2_IRQHandler) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[13]">USART4_5_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32l071xx.o(.text) referenced from startup_stm32l071xx.o(RESET)
 <LI><a href="#[24]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l071xx.o(.text)
 <LI><a href="#[26]">_sbackspace</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[25]">_sgetc</a> from _sgetc.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[2c]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[2c]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[2d]">atCmdFmpcIMSIParseRespon</a> from app_atcmd.o(i.atCmdFmpcIMSIParseRespon) referenced from app_atcmd.o(i.atCmdFmpcIMSIParse)
 <LI><a href="#[2e]">atCmdIMEIParseRespon</a> from app_atcmd.o(i.atCmdIMEIParseRespon) referenced from app_atcmd.o(i.atCmdIMEIParse)
 <LI><a href="#[38]">atCmdParserFunction</a> from app_atcmd.o(i.atCmdParserFunction) referenced from app_user.o(i.myAppConfig)
 <LI><a href="#[38]">atCmdParserFunction</a> from app_atcmd.o(i.atCmdParserFunction) referenced from app_task.o(i.systemRequestTask)
 <LI><a href="#[3f]">clearRingWakeUp</a> from app_port.o(i.clearRingWakeUp) referenced from app_port.o(i.portRingSignal)
 <LI><a href="#[41]">deleteMessage</a> from app_net.o(i.deleteMessage) referenced from app_instructioncmd.o(i.sendMessageWithDifMode)
 <LI><a href="#[35]">gpsStartBD</a> from app_task.o(i.gpsStartBD) referenced from app_task.o(i.gpsRequestOpen)
 <LI><a href="#[27]">isspace</a> from isspace_o.o(.text) referenced from strtod.o(.text)
 <LI><a href="#[39]">ledRunTask</a> from app_task.o(i.ledRunTask) referenced from app_user.o(i.myAppConfig)
 <LI><a href="#[22]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[32]">mode4Callback</a> from app_net.o(i.mode4Callback) referenced from app_instructioncmd.o(i.doModeInstruction)
 <LI><a href="#[2f]">moduleReset</a> from app_net.o(i.moduleReset) referenced from app_instructioncmd.o(i.doAPNInstruction)
 <LI><a href="#[40]">moduleResetProcess</a> from app_serverprotocol.o(i.moduleResetProcess) referenced from app_serverprotocol.o(i.protocolRunFsm)
 <LI><a href="#[37]">moduleResetProcessA</a> from app_net.o(i.moduleResetProcessA) referenced from app_net.o(i.moduleReset)
 <LI><a href="#[3d]">moduleResponParaser</a> from app_net.o(i.moduleResponParaser) referenced from app_task.o(i.netModuleStartup)
 <LI><a href="#[3c]">n58ATA</a> from app_net.o(i.n58ATA) referenced from app_net.o(i.n58AtaParser)
 <LI><a href="#[3a]">outPutNodeCmd</a> from app_net.o(i.outPutNodeCmd) referenced from app_user.o(i.myAppConfig)
 <LI><a href="#[30]">playAudio</a> from app_net.o(i.playAudio) referenced from app_instructioncmd.o(i.doAudioInstrucion)
 <LI><a href="#[30]">playAudio</a> from app_net.o(i.playAudio) referenced from app_net.o(i.n58AudplayParser)
 <LI><a href="#[33]">portSystemReset</a> from app_port.o(i.portSystemReset) referenced from app_instructioncmd.o(i.doResetInstruction)
 <LI><a href="#[33]">portSystemReset</a> from app_port.o(i.portSystemReset) referenced from app_instructioncmd.o(i.doUPSInstruction)
 <LI><a href="#[34]">reConnectServer</a> from app_net.o(i.reConnectServer) referenced from app_instructioncmd.o(i.doServerInstruction)
 <LI><a href="#[31]">recStopAndUpload</a> from app_rec.o(i.recStopAndUpload) referenced from app_instructioncmd.o(i.doJtInstruction)
 <LI><a href="#[36]">repairGsensor</a> from app_task.o(i.repairGsensor) referenced from app_task.o(i.gsensorIntervalCheck)
 <LI><a href="#[3b]">taskRunInOneSecond</a> from app_task.o(i.taskRunInOneSecond) referenced from app_user.o(i.myAppConfig)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[24]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(.text)
</UL>
<P><STRONG><a name="[296]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[42]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6f]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[297]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[298]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[299]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[29a]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[29b]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM21_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM22_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>USART4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l071xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[29c]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeUTCTimeToLocalTime
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetSystemDateTime
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetNextWakeUpTime
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetNextAlarmTime
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longitude_to_double
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;latitude_to_double
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addNewGPSInfo
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol19
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolGPSpack
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recRecordUploadTask
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uploadRequestInMode4
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hearbeatRequest
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorIntervalCheck
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runTimeCount
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRunFsm
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF3
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FswrParser
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheGPSCornerPoint
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recStart
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doParamInstruction
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doDebugInstrucion
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DelayMicroSecond
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[29d]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeUTCTimeToLocalTime
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[49]"></a>mktime</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, mktime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = mktime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetSystemDateTime
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_RMC
</UL>

<P><STRONG><a name="[7e]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeUTCTimeToLocalTime
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNodeCmd
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseGPS
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLocalRTCTime
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolReceivePush
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FswrParser
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ztvm_encrypt_undes
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ztvm_encrypt_des
</UL>

<P><STRONG><a name="[11a]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addNewGPSInfo
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLastPoint
</UL>

<P><STRONG><a name="[29e]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[29f]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2a0]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_GSV
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemShutDown
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorTapTask
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsClearCurrentGPSInfo
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBleInfoReset
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetblemacInstrucion
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doParamInstruction
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetSystemDateTime
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portModuleCfg
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorSdaSclCtl
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleInfoInit
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveUPSServer
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveServer
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveBleMac
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnUser
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnPswd
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnName
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myAppConfig
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_RMC
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_GSV
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseGPS
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRxParser
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsClearCurrentGPSInfo
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSNInstruction
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[2a1]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[133]"></a>strstr</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distinguishOK
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugParase
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPsetupParser
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPcloseParser
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPOITYPEInstruction
</UL>

<P><STRONG><a name="[126]"></a>strncpy</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveUPSServer
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveServer
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveBleMac
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnUser
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnPswd
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnName
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRxParser
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBlePRecvParser
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBleCRecvParser
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58WIFISCANParser
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPRecvParser
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58GmrParser
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FSLISTParser
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CSQParser
</UL>

<P><STRONG><a name="[dd]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringToItem
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strstr
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strpach
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveUPSServer
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveServer
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveBleMac
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnUser
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnPswd
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnName
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugParase
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showgpsinfo
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charstrToHexValue
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF1
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packIMEI
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dorequestSend123
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FSLISTParser
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVolInstrucion
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVibrangeInstrucion
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVersionInstruction
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUTCInstruction
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUPSInstruction
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doTurnAlgInstrucion
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doTTSInstruction
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStatusInstruction
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStaticTimeInstrucion
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSmsreplyInstrucion
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetblemacInstrucion
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetAgpsInstruction
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doServerInstruction
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSNInstruction
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doResetInstruction
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPdopInstrucion
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doParamInstruction
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPOITYPEInstruction
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLOWWInstruction
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLEDInstruction
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doJtInstruction
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doHbtInstruction
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFenceInstrucion
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryTestInstruction
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryInstrucion
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doDebugInstrucion
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doCFInstruction
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doBFInstruction
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAudioInstrucion
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAnswerInstrucion
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAlarmModeInstrucion
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAPNInstruction
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doACCCTLGNSSInstrucion
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mycmdPatch
</UL>

<P><STRONG><a name="[191]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveCodeVersion
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recUpdateFileName
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUpdateRestoreFileNameAndTotalSize
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CMGRParser
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetAgpsInstruction
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPOITYPEInstruction
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doDebugInstrucion
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doCFInstruction
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doBFInstruction
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAudioInstrucion
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAPNInstruction
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do123Instruction
</UL>

<P><STRONG><a name="[4e]"></a>strtoul</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = strtoul &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58MylacidParser
</UL>

<P><STRONG><a name="[52]"></a>atoi</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atoi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugParase
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_RMC
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_GSV
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_GSA
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_GGA
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBlePRecvParser
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBleCRecvParser
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPRecvParser
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FswrParser
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FSLISTParser
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CSQParser
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CREGParser
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CMTIParser
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVolInstrucion
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVibrangeInstrucion
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUTCInstruction
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUPSInstruction
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doTurnAlgInstrucion
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStaticTimeInstrucion
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetAgpsInstruction
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPdopInstrucion
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPOITYPEInstruction
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLOWWInstruction
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLEDInstruction
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doJtInstruction
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doHbtInstruction
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAudioInstrucion
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAnswerInstrucion
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doACCCTLGNSSInstrucion
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugLevelParser
</UL>

<P><STRONG><a name="[54]"></a>atol</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, atol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = atol &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSmsreplyInstrucion
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doServerInstruction
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFenceInstrucion
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[58]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[59]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[186]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAdcCal
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_13
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcAdccalParase
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatVoltage
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcAdccalParase
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longitude_to_double
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;latitude_to_double
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charstrToHexValue
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheDistanceBetweenTwoPonits
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longitude_to_double
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;latitude_to_double
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatteryLevel
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheDistanceBetweenTwoPonits
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheDistanceBetweenTwoPonits
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[61]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcAdccalParase
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_RMC
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longitude_to_double
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;latitude_to_double
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charstrToHexValue
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolGPSpack
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatteryLevel
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatVoltage
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheDistanceBetweenTwoPonits
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceOfPoint
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[62]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetAdcCal
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longitude_to_double
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;latitude_to_double
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatteryLevel
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheDistanceBetweenTwoPonits
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPdopInstrucion
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLOWWInstruction
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[108]"></a>__ARM_scalbn</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheDistanceBetweenTwoPonits
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[2a2]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcAdccalParase
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatVoltage
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
</UL>

<P><STRONG><a name="[64]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charstrToHexValue
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetAdcCal
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longitude_to_double
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;latitude_to_double
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charstrToHexValue
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceOfPoint
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPdopInstrucion
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLOWWInstruction
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[187]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAdcCal
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_13
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longitude_to_double
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;latitude_to_double
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charstrToHexValue
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolGPSpack
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatteryLevel
</UL>

<P><STRONG><a name="[13e]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcAdccalParase
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showgpsinfo
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatteryLevel
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtProcess
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatVoltage
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStatusInstruction
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLOWWInstruction
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryTestInstruction
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
</UL>

<P><STRONG><a name="[210]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longitude_to_double
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;latitude_to_double
</UL>

<P><STRONG><a name="[160]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolGPSpack
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheGPSCornerPoint
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceOfPoint
</UL>

<P><STRONG><a name="[114]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorTapTask
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetAdcCal
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcAdccalParase
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_GSA
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatVoltage
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLOWWInstruction
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[2a3]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[28f]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
</UL>

<P><STRONG><a name="[48]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[2a4]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[2a5]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[2a6]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
</UL>

<P><STRONG><a name="[27]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace_o.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[4a]"></a>_localtime</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, localtime_i.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _localtime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>

<P><STRONG><a name="[51]"></a>_strtoul</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
</UL>

<P><STRONG><a name="[6b]"></a>__strtod_int</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
</UL>

<P><STRONG><a name="[53]"></a>strtol</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[2a7]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[57]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[56]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[5e]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[5d]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>

<P><STRONG><a name="[6d]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[43]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[2a8]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[6a]"></a>_scanf_real</STRONG> (Thumb, 0 bytes, Stack size 104 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>

<P><STRONG><a name="[73]"></a>_scanf_really_real</STRONG> (Thumb, 586 bytes, Stack size 104 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[25]"></a>_sgetc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>_sbackspace</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[75]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_d2iz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_lmul</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[2a9]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>__aeabi_ul2d</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dfltul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[7b]"></a>CreateNodeCmd</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, app_net.o(i.CreateNodeCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSystemReset
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMallocFault
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRestoreWriteData
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protoclparser52
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessage
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDataToServer
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBleSendData
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doTTSInstruction
</UL>

<P><STRONG><a name="[f]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.DMA1_Channel2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA1_Channel2_3_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel4_5_6_7_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.DMA1_Channel4_5_6_7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DMA1_Channel4_5_6_7_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = EXTI4_15_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; portRingSignal &rArr; startTimer &rArr; Create_Timer &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[d6]"></a>Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LPUART1_UART_Init
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetSystemDateTime
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetAdc
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateAlarmA
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IWDG_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[86]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, stm32l0xx_hal_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetErrorCode
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_DATAEEPROM_Program
</UL>

<P><STRONG><a name="[17e]"></a>GetCrc16</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, app_sys.o(i.GetCrc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetCrc16
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolTail_7979
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolTail
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decryptSN
</UL>

<P><STRONG><a name="[88]"></a>HAL_ADCEx_Calibration_Start</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, stm32l0xx_hal_adc_ex.o(i.HAL_ADCEx_Calibration_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_ADCEx_Calibration_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myAppConfig
</UL>

<P><STRONG><a name="[89]"></a>HAL_ADC_ConfigChannel</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, stm32l0xx_hal_adc.o(i.HAL_ADC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_ADC_ConfigChannel &rArr; ADC_DelayMicroSecond &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DelayMicroSecond
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC_Init
</UL>

<P><STRONG><a name="[26c]"></a>HAL_ADC_GetState</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l0xx_hal_adc.o(i.HAL_ADC_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetAdc
</UL>

<P><STRONG><a name="[26d]"></a>HAL_ADC_GetValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l0xx_hal_adc.o(i.HAL_ADC_GetValue))
<BR><BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetAdc
</UL>

<P><STRONG><a name="[8a]"></a>HAL_ADC_Init</STRONG> (Thumb, 446 bytes, Stack size 16 bytes, stm32l0xx_hal_adc.o(i.HAL_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC_Init
</UL>

<P><STRONG><a name="[8b]"></a>HAL_ADC_MspInit</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, adc.o(i.HAL_ADC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[8e]"></a>HAL_ADC_PollForConversion</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, stm32l0xx_hal_adc.o(i.HAL_ADC_PollForConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_ADC_PollForConversion
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetAdc
</UL>

<P><STRONG><a name="[8f]"></a>HAL_ADC_Start</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32l0xx_hal_adc.o(i.HAL_ADC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_ADC_Start &rArr; ADC_Enable &rArr; ADC_DelayMicroSecond &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetAdc
</UL>

<P><STRONG><a name="[90]"></a>HAL_ADC_Stop</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, stm32l0xx_hal_adc.o(i.HAL_ADC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_ADC_Stop &rArr; ADC_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Disable
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ConversionStop
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetAdc
</UL>

<P><STRONG><a name="[c1]"></a>HAL_DMA_Abort</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, stm32l0xx_hal_dma.o(i.HAL_DMA_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_DMA_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DMAStop
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[cb]"></a>HAL_DMA_Abort_IT</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32l0xx_hal_dma.o(i.HAL_DMA_Abort_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Abort_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[91]"></a>HAL_DMA_DeInit</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, stm32l0xx_hal_dma.o(i.HAL_DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>

<P><STRONG><a name="[c2]"></a>HAL_DMA_GetError</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32l0xx_hal_dma.o(i.HAL_DMA_GetError))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DMAStop
</UL>

<P><STRONG><a name="[84]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, stm32l0xx_hal_dma.o(i.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_5_6_7_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel2_3_IRQHandler
</UL>

<P><STRONG><a name="[92]"></a>HAL_DMA_Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32l0xx_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_DMA_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[93]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, stm32l0xx_hal_dma.o(i.HAL_DMA_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Start_Receive_DMA
</UL>

<P><STRONG><a name="[95]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32l0xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_init
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcAdccalParase
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
</UL>

<P><STRONG><a name="[1f1]"></a>HAL_FLASHEx_DATAEEPROM_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32l0xx_hal_flash_ex.o(i.HAL_FLASHEx_DATAEEPROM_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteWord
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteTwoBytes
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>

<P><STRONG><a name="[96]"></a>HAL_FLASHEx_DATAEEPROM_Program</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, stm32l0xx_hal_flash_ex.o(i.HAL_FLASHEx_DATAEEPROM_Program))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteWord
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteTwoBytes
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>

<P><STRONG><a name="[1f0]"></a>HAL_FLASHEx_DATAEEPROM_Unlock</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32l0xx_hal_flash_ex.o(i.HAL_FLASHEx_DATAEEPROM_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteWord
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteTwoBytes
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>

<P><STRONG><a name="[d4]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 212 bytes, Stack size 20 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>

<P><STRONG><a name="[97]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_user.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = HAL_GPIO_EXTI_Callback &rArr; portRingSignal &rArr; startTimer &rArr; Create_Timer &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portRingSignal
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portLdrInt
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorInt
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tapInt
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[85]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback &rArr; portRingSignal &rArr; startTimer &rArr; Create_Timer &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[8d]"></a>HAL_GPIO_Init</STRONG> (Thumb, 356 bytes, Stack size 28 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portModuleCfg
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorSdaSclCtl
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Output
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Input
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[f4]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portLdrInt
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Wait_ACK
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Recv_Byte
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryTestInstruction
</UL>

<P><STRONG><a name="[7c]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorSdaSclCtl
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Write_Low
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Write_High
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Wait_ACK
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Stop
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Start
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Recv_Byte
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_NACK
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_ACK
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNodeCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResetProcessA
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outPutNodeCmd
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFMPCnmeaParase
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugParase
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsOutputCheckTask
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoSleepTask
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;signalLedTask
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestOpen
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestClose
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemLedStatus
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleReset
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modulePowerOn
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modulePowerOff
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[77]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetAlarm_IT
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_DeactivateAlarm
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_PollForConversion
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kernalRun
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Timer
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADCEx_Calibration_Start
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Disable
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ConversionStop
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_SetWakeUpTimer_IT
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[9c]"></a>HAL_IWDG_Init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32l0xx_hal_iwdg.o(i.HAL_IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IWDG_Init
</UL>

<P><STRONG><a name="[279]"></a>HAL_IWDG_Refresh</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l0xx_hal_iwdg.o(i.HAL_IWDG_Refresh))
<BR><BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portWdtFeed
</UL>

<P><STRONG><a name="[fb]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[9d]"></a>HAL_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32l0xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>HAL_InitTick</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32l0xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_InitTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[9f]"></a>HAL_MspInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32l0xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[d5]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>

<P><STRONG><a name="[bb]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[a1]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[277]"></a>HAL_NVIC_SystemReset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l0xx_hal_cortex.o(i.HAL_NVIC_SystemReset))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSystemReset
</UL>

<P><STRONG><a name="[272]"></a>HAL_PWREx_EnableFastWakeUp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_hal_pwr_ex.o(i.HAL_PWREx_EnableFastWakeUp))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portLowPowerCfg
</UL>

<P><STRONG><a name="[271]"></a>HAL_PWREx_EnableUltraLowPower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_hal_pwr_ex.o(i.HAL_PWREx_EnableUltraLowPower))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portLowPowerCfg
</UL>

<P><STRONG><a name="[fd]"></a>HAL_PWR_EnableBkUpAccess</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_hal_pwr.o(i.HAL_PWR_EnableBkUpAccess))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[285]"></a>HAL_PWR_EnterSTOPMode</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, stm32l0xx_hal_pwr.o(i.HAL_PWR_EnterSTOPMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_PWR_EnterSTOPMode
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestTask
</UL>

<P><STRONG><a name="[a3]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 362 bytes, Stack size 24 bytes, stm32l0xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[a4]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 386 bytes, Stack size 24 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[ff]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[101]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[a5]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[a7]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1074 bytes, Stack size 32 bytes, stm32l0xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[b1]"></a>HAL_RTCEx_AlarmBEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_rtc_ex.o(i.HAL_RTCEx_AlarmBEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_AlarmIRQHandler
</UL>

<P><STRONG><a name="[a8]"></a>HAL_RTCEx_SetWakeUpTimer_IT</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, stm32l0xx_hal_rtc_ex.o(i.HAL_RTCEx_SetWakeUpTimer_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RTCEx_SetWakeUpTimer_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[a9]"></a>HAL_RTCEx_WakeUpTimerEventCallback</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, app_port.o(i.HAL_RTCEx_WakeUpTimerEventCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTCEx_WakeUpTimerEventCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestSet
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_WakeUpTimerIRQHandler
</UL>

<P><STRONG><a name="[ab]"></a>HAL_RTCEx_WakeUpTimerIRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32l0xx_hal_rtc_ex.o(i.HAL_RTCEx_WakeUpTimerIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTCEx_WakeUpTimerIRQHandler &rArr; HAL_RTCEx_WakeUpTimerEventCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_WakeUpTimerEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[ac]"></a>HAL_RTC_AlarmAEventCallback</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_port.o(i.HAL_RTC_AlarmAEventCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = HAL_RTC_AlarmAEventCallback &rArr; portSetNextAlarmTime &rArr; updateAlarmA &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemModeRunStart
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetNextWakeUpTime
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetNextAlarmTime
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_AlarmIRQHandler
</UL>

<P><STRONG><a name="[b0]"></a>HAL_RTC_AlarmIRQHandler</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32l0xx_hal_rtc.o(i.HAL_RTC_AlarmIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = HAL_RTC_AlarmIRQHandler &rArr; HAL_RTC_AlarmAEventCallback &rArr; portSetNextAlarmTime &rArr; updateAlarmA &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_AlarmAEventCallback
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_AlarmBEventCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[b2]"></a>HAL_RTC_DeactivateAlarm</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, stm32l0xx_hal_rtc.o(i.HAL_RTC_DeactivateAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RTC_DeactivateAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateAlarmA
</UL>

<P><STRONG><a name="[b3]"></a>HAL_RTC_GetAlarm</STRONG> (Thumb, 134 bytes, Stack size 20 bytes, stm32l0xx_hal_rtc.o(i.HAL_RTC_GetAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RTC_GetAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetNextAlarmTime
</UL>

<P><STRONG><a name="[b5]"></a>HAL_RTC_GetDate</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32l0xx_hal_rtc.o(i.HAL_RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetSystemDateTime
</UL>

<P><STRONG><a name="[b6]"></a>HAL_RTC_GetTime</STRONG> (Thumb, 88 bytes, Stack size 12 bytes, stm32l0xx_hal_rtc.o(i.HAL_RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetSystemDateTime
</UL>

<P><STRONG><a name="[b7]"></a>HAL_RTC_Init</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, stm32l0xx_hal_rtc.o(i.HAL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RTC_Init &rArr; HAL_RTC_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[b8]"></a>HAL_RTC_MspInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rtc.o(i.HAL_RTC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[bc]"></a>HAL_RTC_SetAlarm_IT</STRONG> (Thumb, 390 bytes, Stack size 32 bytes, stm32l0xx_hal_rtc.o(i.HAL_RTC_SetAlarm_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RTC_SetAlarm_IT
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateAlarmA
</UL>

<P><STRONG><a name="[be]"></a>HAL_RTC_SetDate</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, stm32l0xx_hal_rtc.o(i.HAL_RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RTC_SetDate &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetSystemDateTime
</UL>

<P><STRONG><a name="[bf]"></a>HAL_RTC_SetTime</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, stm32l0xx_hal_rtc.o(i.HAL_RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetSystemDateTime
</UL>

<P><STRONG><a name="[ba]"></a>HAL_RTC_WaitForSynchro</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32l0xx_hal_rtc.o(i.HAL_RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[286]"></a>HAL_ResumeTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_ResumeTick))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestTask
</UL>

<P><STRONG><a name="[a0]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32l0xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[284]"></a>HAL_SuspendTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32l0xx_hal.o(i.HAL_SuspendTick))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestTask
</UL>

<P><STRONG><a name="[cc]"></a>HAL_UARTEx_RxEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.HAL_UARTEx_RxEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMARxHalfCplt
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAReceiveCplt
</UL>

<P><STRONG><a name="[cd]"></a>HAL_UARTEx_WakeupCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_uart_ex.o(i.HAL_UARTEx_WakeupCallback))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[c0]"></a>HAL_UART_DMAStop</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_DMAStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_UART_DMAStop &rArr; HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTxTransfer
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_GetError
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halGetInDma
</UL>

<P><STRONG><a name="[c5]"></a>HAL_UART_DeInit</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = HAL_UART_DeInit &rArr; HAL_UART_MspDeInit &rArr; HAL_DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartCfg
</UL>

<P><STRONG><a name="[c7]"></a>HAL_UART_ErrorCallback</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, app_port.o(i.HAL_UART_ErrorCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_UART_ErrorCallback &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_DMA
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAError
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError
</UL>

<P><STRONG><a name="[ca]"></a>HAL_UART_IRQHandler</STRONG> (Thumb, 530 bytes, Stack size 24 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = HAL_UART_IRQHandler &rArr; HAL_UART_ErrorCallback &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_WakeupCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_IRQHandler
</UL>

<P><STRONG><a name="[cf]"></a>HAL_UART_Init</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LPUART1_UART_Init
</UL>

<P><STRONG><a name="[c6]"></a>HAL_UART_MspDeInit</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, usart.o(i.HAL_UART_MspDeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_UART_MspDeInit &rArr; HAL_DMA_DeInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DeInit
</UL>

<P><STRONG><a name="[d0]"></a>HAL_UART_MspInit</STRONG> (Thumb, 354 bytes, Stack size 48 bytes, usart.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[c9]"></a>HAL_UART_Receive_DMA</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_Receive_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Start_Receive_DMA
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartCfg
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halGetInDma
</UL>

<P><STRONG><a name="[d8]"></a>HAL_UART_RxCpltCallback</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, app_port.o(i.HAL_UART_RxCpltCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_UART_RxCpltCallback &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAReceiveCplt
</UL>

<P><STRONG><a name="[fe]"></a>HAL_UART_RxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_RxHalfCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMARxHalfCplt
</UL>

<P><STRONG><a name="[d9]"></a>HAL_UART_Transmit</STRONG> (Thumb, 210 bytes, Stack size 48 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartSend
</UL>

<P><STRONG><a name="[ce]"></a>HAL_UART_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.HAL_UART_TxCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = HardFault_Handler &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSystemReset
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveHardFault
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[f0]"></a>IIC_Delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_port.o(i.IIC_Delay))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Write_Low
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Write_High
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Wait_ACK
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Stop
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Start
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Recv_Byte
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_NACK
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_ACK
</UL>

<P><STRONG><a name="[21]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.LPUART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = LPUART1_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_UART_ErrorCallback &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halRecvInIdle
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>LogMessage</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_sys.o(i.LogMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartSend
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringToItem
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemModeRunStart
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startStep
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearStep
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartCfg
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetSystemDateTime
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portModuleCfg
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portLdrInt
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disPlaySystemTime
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_AlarmAEventCallback
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateAlarmA
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSystemReset
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemTaskSuspend
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemTaskResume
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kernalRun
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Timer
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNodeCmd
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResetProcessA
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestTask
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestSet
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmUploadRequest
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tapInt
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFMPCnmeaParase
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugParase
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showgpsinfo
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseGPS
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRestoreWriteData
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsReadFromModuleAndSendtoServe
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRxParser
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protoclparser52
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUploadPointToServer
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtProcess
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemShutDown
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorTapTask
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorIntervalCheck
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestClear
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsOutputCheckTask
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoSleepTask
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAgps
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netModuleStartup
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeShutDownQuickly
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestOpen
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestClose
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPoitypeRequest
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recNoFileToread
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolReceivePush
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRestoreDataSend
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF3
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol62
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessage
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netExitStopMode
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netEnterStopMode
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58xiicqueryParser
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58cgattParser
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPsetupParser
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPcloseParser
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPRecvParser
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58NwblecconParser
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58MylacidParser
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FSLISTParser
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CSQParser
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CREGParser
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CIMIParser
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CCIDParser
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58AudplayParser
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleReset
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modulePowerOn
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modulePowerOff
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58enterNormalMode
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58enterFlightMode
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLastPoint
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheGPSCornerPoint
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceOfPoint
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recStop
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recStart
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doTTSInstruction
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSNInstruction
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do123Instruction
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdZTSNParse
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcCMParse
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdCmGetParser
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[df]"></a>LogMessageWL</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_sys.o(i.LogMessageWL))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartSend
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[c8]"></a>LogPrintf</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, app_sys.o(i.LogPrintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessageWL
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRange
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_init
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSaveStep
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portRingSignal
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portLdrInt
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopTimer
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58_ChangeInvokeStatus
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcAdccalParase
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protoclparser52
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protoclparser51
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recRecordUploadTask
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readInterruptConfig
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtProcess
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uploadRequestInMode4
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitNetCtl
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netModuleStartup
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netModuleShutdown
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBleCRecvParser
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58WIFISCANParser
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58NwurcblestatParser
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58NwbtblepwrParser
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58NwbleroleParser
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58GmrParser
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FswrParser
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CMTIParser
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CMGRParser
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CIMIParser
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58AudplayParser
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_gsensor_id
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUTCInstruction
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdZTSNParse
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcChkpParse
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugLevelParser
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdIMEIParseRespon
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcIMSIParseRespon
</UL>

<P><STRONG><a name="[e1]"></a>MX_ADC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, adc.o(i.MX_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = MX_ADC_Init &rArr; HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e2]"></a>MX_DMA_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, dma.o(i.MX_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MX_DMA_Init &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e3]"></a>MX_GPIO_Init</STRONG> (Thumb, 246 bytes, Stack size 48 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e4]"></a>MX_IWDG_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, iwdg.o(i.MX_IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MX_IWDG_Init &rArr; HAL_IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e5]"></a>MX_LPUART1_UART_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, usart.o(i.MX_LPUART1_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MX_LPUART1_UART_Init &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartCfg
</UL>

<P><STRONG><a name="[e6]"></a>MX_RTC_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, rtc.o(i.MX_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MX_RTC_Init &rArr; HAL_RTC_Init &rArr; HAL_RTC_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_SetWakeUpTimer_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>MX_USART1_UART_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usart.o(i.MX_USART1_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MX_USART1_UART_Init &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartCfg
</UL>

<P><STRONG><a name="[e8]"></a>MX_USART2_UART_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usart.o(i.MX_USART2_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MX_USART2_UART_Init &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartCfg
</UL>

<P><STRONG><a name="[e9]"></a>N58_ChangeInvokeStatus</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_net.o(i.N58_ChangeInvokeStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = N58_ChangeInvokeStatus &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemLedStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TcpsendParase
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRunFsm
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reConnectServer
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPcloseParser
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode4Callback
</UL>

<P><STRONG><a name="[eb]"></a>N58_CreateSocket</STRONG> (Thumb, 30 bytes, Stack size 112 bytes, app_net.o(i.N58_CreateSocket))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = N58_CreateSocket &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
</UL>

<P><STRONG><a name="[ed]"></a>N58enterFlightMode</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_net.o(i.N58enterFlightMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = N58enterFlightMode &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
</UL>

<P><STRONG><a name="[3e]"></a>N58enterNormalMode</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_net.o(i.N58enterNormalMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = N58enterNormalMode &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_net.o(i.networkConnectProcess)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[b4]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l0xx_hal_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetAlarm
</UL>

<P><STRONG><a name="[bd]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l0xx_hal_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetAlarm_IT
</UL>

<P><STRONG><a name="[b9]"></a>RTC_EnterInitMode</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, stm32l0xx_hal_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = RTC_IRQHandler &rArr; HAL_RTC_AlarmIRQHandler &rArr; HAL_RTC_AlarmAEventCallback &rArr; portSetNextAlarmTime &rArr; updateAlarmA &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_AlarmIRQHandler
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_WakeUpTimerIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[ee]"></a>Soft_IIC_ACK</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, app_port.o(i.Soft_IIC_ACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Soft_IIC_ACK &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Delay
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Recv_Byte
</UL>

<P><STRONG><a name="[f2]"></a>Soft_IIC_NACK</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_port.o(i.Soft_IIC_NACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Soft_IIC_NACK &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Delay
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Recv_Byte
</UL>

<P><STRONG><a name="[f3]"></a>Soft_IIC_Recv_Byte</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, app_port.o(i.Soft_IIC_Recv_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Soft_IIC_Recv_Byte &rArr; Soft_IIC_NACK &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_NACK
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_ACK
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Delay
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Input
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iicReadData
</UL>

<P><STRONG><a name="[f5]"></a>Soft_IIC_Start</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app_port.o(i.Soft_IIC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Soft_IIC_Start &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Delay
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iicWriteData
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iicReadData
</UL>

<P><STRONG><a name="[f6]"></a>Soft_IIC_Stop</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, app_port.o(i.Soft_IIC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Delay
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iicWriteData
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iicReadData
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Wait_ACK
</UL>

<P><STRONG><a name="[f7]"></a>Soft_IIC_Wait_ACK</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, app_port.o(i.Soft_IIC_Wait_ACK))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Stop
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Delay
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Output
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Input
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Write_Byte
</UL>

<P><STRONG><a name="[f8]"></a>Soft_IIC_Write_Byte</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_port.o(i.Soft_IIC_Write_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Write_Low
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Write_High
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Wait_ACK
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Output
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iicWriteData
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iicReadData
</UL>

<P><STRONG><a name="[f9]"></a>Soft_IIC_Write_High</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_port.o(i.Soft_IIC_Write_High))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Soft_IIC_Write_High
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Write_Byte
</UL>

<P><STRONG><a name="[fa]"></a>Soft_IIC_Write_Low</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_port.o(i.Soft_IIC_Write_Low))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Soft_IIC_Write_Low
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Write_Byte
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[fc]"></a>SystemClock_Config</STRONG> (Thumb, 134 bytes, Stack size 120 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnableBkUpAccess
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestTask
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23]"></a>SystemInit</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_stm32l0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(.text)
</UL>
<P><STRONG><a name="[d2]"></a>UART_AdvFeatureConfig</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, stm32l0xx_hal_uart.o(i.UART_AdvFeatureConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_AdvFeatureConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[d3]"></a>UART_CheckIdleState</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, stm32l0xx_hal_uart.o(i.UART_CheckIdleState))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART_CheckIdleState &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[d1]"></a>UART_SetConfig</STRONG> (Thumb, 492 bytes, Stack size 24 bytes, stm32l0xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[d7]"></a>UART_Start_Receive_DMA</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, stm32l0xx_hal_uart.o(i.UART_Start_Receive_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_DMA
</UL>

<P><STRONG><a name="[da]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, stm32l0xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_CheckIdleState
</UL>

<P><STRONG><a name="[1f]"></a>USART1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = USART1_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_UART_ErrorCallback &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halRecvInIdle
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USART2_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32l0xx_it.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = USART2_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; HAL_UART_ErrorCallback &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halRecvInIdle
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l071xx.o(RESET)
</UL>
<P><STRONG><a name="[103]"></a>XINGSHENG_ID_ASCII_Decoding</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, app_sn.o(i.XINGSHENG_ID_ASCII_Decoding))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XINGSHENG_ID_Decoder
</UL>

<P><STRONG><a name="[102]"></a>XINGSHENG_ID_Decoder</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, app_sn.o(i.XINGSHENG_ID_Decoder))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = XINGSHENG_ID_Decoder
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XINGSHENG_ID_ASCII_Decoding
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decryptSN
</UL>

<P><STRONG><a name="[104]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2aa]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[83]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringToItem
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetSystemDateTime
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disPlaySystemTime
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateAlarmA
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemTaskSuspend
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemTaskResume
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kernalRun
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Timer
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58_CreateSocket
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestSet
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showgpsinfo
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsReadFromModuleAndSendtoServe
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF1
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protoclparser52
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protoclparser51
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recRecordUploadTask
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dorequestSend123
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestClear
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAgps
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recUpdateFileSize
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setModuleVol
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessage
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDataToServer
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playAudio
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58xiicqueryParser
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58setXGAUTH
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58setAPN
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58cgattParser
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPsetupParser
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58MylacidParser
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FSLISTParser
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CSQParser
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CREGParser
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CIMIParser
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CCIDParser
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheGPSCornerPoint
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceOfPoint
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recStart
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBleSendData
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVolInstrucion
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVibrangeInstrucion
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVersionInstruction
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUTCInstruction
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUPSInstruction
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doTurnAlgInstrucion
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doTTSInstruction
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStatusInstruction
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStaticTimeInstrucion
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSmsreplyInstrucion
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetblemacInstrucion
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetAgpsInstruction
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doServerInstruction
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSNInstruction
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doResetInstruction
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPdopInstrucion
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doParamInstruction
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLOWWInstruction
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLEDInstruction
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doJtInstruction
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doHbtInstruction
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFenceInstrucion
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryTestInstruction
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryInstrucion
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doDebugInstrucion
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAudioInstrucion
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAnswerInstrucion
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAlarmModeInstrucion
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAPNInstruction
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doACCCTLGNSSInstrucion
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[2ab]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[2ac]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[106]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2ad]"></a>__1vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[2ae]"></a>__2vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[2af]"></a>__c89vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[e0]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
</UL>

<P><STRONG><a name="[6c]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[a6]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, stm32l0xx_hal_rcc.o(i.__ARM_common_ll_muluu))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[100]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_net.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStart
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeRun
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPoitypeRequest
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doParamInstruction
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[10c]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
</UL>

<P><STRONG><a name="[2b0]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[107]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 838 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[109]"></a>__kernel_cos</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[10a]"></a>__kernel_poly</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[10b]"></a>__kernel_sin</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[10e]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[10f]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[110]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[111]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[112]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_overflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[10d]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[157]"></a>__read_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__read_errno))
<BR><BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
</UL>

<P><STRONG><a name="[2b1]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[2b2]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[2b3]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[12c]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[74]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scanf_fp.o(i._is_digit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[117]"></a>addNewGPSInfo</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, app_gps.o(i.addNewGPSInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = addNewGPSInfo &rArr; updateLocalRTCTime &rArr; portSetNextAlarmTime &rArr; updateAlarmA &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;terminalGPSUnFixed
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;terminalGPSFixed
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsFilter
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLocalRTCTime
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemLedStatus
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_RMC
</UL>

<P><STRONG><a name="[11f]"></a>alarmRequestClear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_task.o(i.alarmRequestClear))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmUploadRequest
</UL>

<P><STRONG><a name="[209]"></a>alarmRequestSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_task.o(i.alarmRequestSet))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portLdrInt
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tapInt
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorTapTask
</UL>

<P><STRONG><a name="[11d]"></a>alarmUploadRequest</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, app_task.o(i.alarmUploadRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 1172<LI>Call Chain = alarmUploadRequest &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;terminalAlarmSet
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isProtocolReday
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmRequestClear
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myAppRun
</UL>

<P><STRONG><a name="[122]"></a>appBleCRecvParser</STRONG> (Thumb, 144 bytes, Stack size 152 bytes, app_ble.o(i.appBleCRecvParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = appBleCRecvParser &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndexWithNum
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndex
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[127]"></a>appBleInfoReset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_ble.o(i.appBleInfoReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = appBleInfoReset
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleReset
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modulePowerOn
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modulePowerOff
</UL>

<P><STRONG><a name="[128]"></a>appBlePRecvParser</STRONG> (Thumb, 142 bytes, Stack size 72 bytes, app_ble.o(i.appBlePRecvParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 2172<LI>Call Chain = appBlePRecvParser &rArr; instructionParser &rArr; doinstruction &rArr; doDebugInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndexWithNum
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndex
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;instructionParser
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[12a]"></a>appBleSendData</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, app_ble.o(i.appBleSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = appBleSendData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNodeCmd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
</UL>

<P><STRONG><a name="[12b]"></a>asin</STRONG> (Thumb, 574 bytes, Stack size 80 bytes, asin.o(i.asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = asin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheDistanceBetweenTwoPonits
</UL>

<P><STRONG><a name="[12e]"></a>atCmdCmGetParser</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_atcmd.o(i.atCmdCmGetParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = atCmdCmGetParser &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetCM
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
</UL>

<P><STRONG><a name="[130]"></a>atCmdDebugLevelParser</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_atcmd.o(i.atCmdDebugLevelParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = atCmdDebugLevelParser &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugParase
</UL>

<P><STRONG><a name="[140]"></a>atCmdFmpcAllParse</STRONG> (Thumb, 32 bytes, Stack size 488 bytes, app_atcmd.o(i.atCmdFmpcAllParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 1988<LI>Call Chain = atCmdFmpcAllParse &rArr; doFactoryTestInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringToItem
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csqRequest
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryTestInstruction
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
</UL>

<P><STRONG><a name="[143]"></a>atCmdFmpcCMParse</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_atcmd.o(i.atCmdFmpcCMParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = atCmdFmpcCMParse &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveCM
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetCM
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
</UL>

<P><STRONG><a name="[145]"></a>atCmdFmpcChkpParse</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_atcmd.o(i.atCmdFmpcChkpParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = atCmdFmpcChkpParse &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
</UL>

<P><STRONG><a name="[146]"></a>atCmdFmpcIMSIParse</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_atcmd.o(i.atCmdFmpcIMSIParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = atCmdFmpcIMSIParse &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
</UL>

<P><STRONG><a name="[14a]"></a>atCmdIMEIParse</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_atcmd.o(i.atCmdIMEIParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = atCmdIMEIParse &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
</UL>

<P><STRONG><a name="[38]"></a>atCmdParserFunction</STRONG> (Thumb, 516 bytes, Stack size 664 bytes, app_atcmd.o(i.atCmdParserFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 2764<LI>Call Chain = atCmdParserFunction &rArr; instructionParser &rArr; doinstruction &rArr; doDebugInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringToItem
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTerminalAccState
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndex
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessageWL
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartSend
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcAdccalParase
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFMPCnmeaParase
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugParase
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatVoltage
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;instructionParser
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isModuleRunNormal
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csqRequest
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_gsensor_id
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdZTSNParse
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdIMEIParse
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcIMSIParse
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcChkpParse
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcCMParse
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcAllParse
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdCmGetParser
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mycmdPatch
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> app_task.o(i.systemRequestTask)
<LI> app_user.o(i.myAppConfig)
</UL>
<P><STRONG><a name="[151]"></a>atCmdZTSNParse</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, app_atcmd.o(i.atCmdZTSNParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = atCmdZTSNParse &rArr; decryptSN &rArr; ztvm_encrypt_untrides &rArr; ztvm_encrypt_des &rArr; encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeHexStringToByteArray
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveSnNumber
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetSnNumber
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decryptSN
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
</UL>

<P><STRONG><a name="[156]"></a>atof</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, atof.o(i.atof))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_RMC
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_GSA
</UL>

<P><STRONG><a name="[158]"></a>autoSleepTask</STRONG> (Thumb, 254 bytes, Stack size 16 bytes, app_task.o(i.autoSleepTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = autoSleepTask &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTerminalAccState
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestSet
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resIsCycleRuning
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recIsRun
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netConnectReset
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsIsRun
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isModuleRunNormal
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskRunInOneSecond
</UL>

<P><STRONG><a name="[15d]"></a>calculateDistanceOfPoint</STRONG> (Thumb, 126 bytes, Stack size 136 bytes, app_gpsarithmetic.o(i.calculateDistanceOfPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = calculateDistanceOfPoint &rArr; calculateTheDistanceBetweenTwoPonits &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentGPSInfo
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLastPoint
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheDistanceBetweenTwoPonits
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUploadPointToServer
</UL>

<P><STRONG><a name="[15f]"></a>calculateTheDistanceBetweenTwoPonits</STRONG> (Thumb, 248 bytes, Stack size 80 bytes, app_gpsarithmetic.o(i.calculateTheDistanceBetweenTwoPonits))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = calculateTheDistanceBetweenTwoPonits &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceOfPoint
</UL>

<P><STRONG><a name="[164]"></a>calculateTheGPSCornerPoint</STRONG> (Thumb, 274 bytes, Stack size 72 bytes, app_gpsarithmetic.o(i.calculateTheGPSCornerPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1220<LI>Call Chain = calculateTheGPSCornerPoint &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getGSPfifo
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUploadPointToServer
</UL>

<P><STRONG><a name="[17a]"></a>changeByteArrayToHexString</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_sys.o(i.changeByteArrayToHexString))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = changeByteArrayToHexString
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRestoreWriteData
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRestoreDataSend
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF3
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol62
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPRecvParser
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doTTSInstruction
</UL>

<P><STRONG><a name="[152]"></a>changeHexStringToByteArray</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, app_sys.o(i.changeHexStringToByteArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = changeHexStringToByteArray
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asciiToHex
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58WIFISCANParser
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSNInstruction
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdZTSNParse
</UL>

<P><STRONG><a name="[167]"></a>changeHexStringToByteArray_10in</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, app_sys.o(i.changeHexStringToByteArray_10in))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = changeHexStringToByteArray_10in
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asciiToHex
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol62
</UL>

<P><STRONG><a name="[168]"></a>changeUTCTimeToLocalTime</STRONG> (Thumb, 336 bytes, Stack size 48 bytes, app_sys.o(i.changeUTCTimeToLocalTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = changeUTCTimeToLocalTime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLocalRTCTime
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolGPSpack
</UL>

<P><STRONG><a name="[169]"></a>charstrToHexValue</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, app_nmea.o(i.charstrToHexValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = charstrToHexValue &rArr; pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseGPS
</UL>

<P><STRONG><a name="[16b]"></a>clearHbtTimer</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_serverprotocol.o(i.clearHbtTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = clearHbtTimer &rArr; stopTimer &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRxParser
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CSQParser
</UL>

<P><STRONG><a name="[16d]"></a>clearStep</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_mir3da.o(i.clearStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = clearStep &rArr; mir3da_register_write &rArr; iicWriteData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_register_write
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portClearStep
</UL>

<P><STRONG><a name="[13b]"></a>closeModuleGPS</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_net.o(i.closeModuleGPS))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = closeModuleGPS &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFMPCnmeaParase
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsOutputCheckTask
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestClose
</UL>

<P><STRONG><a name="[163]"></a>cos</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheDistanceBetweenTwoPonits
</UL>

<P><STRONG><a name="[16f]"></a>createProtocol16</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, app_serverprotocol.o(i.createProtocol16))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = createProtocol16 &rArr; protocolGPSpack &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getLastFixedGPSInfo
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolGPSpack
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolTail
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolHead
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
</UL>

<P><STRONG><a name="[174]"></a>createProtocol19</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, app_serverprotocol.o(i.createProtocol19))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = createProtocol19 &rArr; portGetSystemDateTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetSystemDateTime
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolTail
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolHead
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
</UL>

<P><STRONG><a name="[177]"></a>createProtocol62</STRONG> (Thumb, 130 bytes, Stack size 88 bytes, app_serverprotocol.o(i.createProtocol62))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = createProtocol62 &rArr; sendDataToServer &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeHexStringToByteArray_10in
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeByteArrayToHexString
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolTail_7979
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolSerial
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDataToServer
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FswrParser
</UL>

<P><STRONG><a name="[17c]"></a>createProtocolF1</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, app_serverprotocol.o(i.createProtocolF1))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = createProtocolF1 &rArr; createProtocolTail &rArr; GetCrc16
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolTail
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolSerial
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolHead
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getModuleIMSI
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getModuleICCID
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
</UL>

<P><STRONG><a name="[17d]"></a>createProtocolF3</STRONG> (Thumb, 232 bytes, Stack size 320 bytes, app_serverprotocol.o(i.createProtocolF3))
<BR><BR>[Stack]<UL><LI>Max Depth = 812<LI>Call Chain = createProtocolF3 &rArr; sendDataToServer &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeByteArrayToHexString
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetSystemDateTime
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolTail
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolSerial
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolHead
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDataToServer
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58WIFISCANParser
</UL>

<P><STRONG><a name="[17f]"></a>createProtocol_01</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, app_serverprotocol.o(i.createProtocol_01))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = createProtocol_01 &rArr; createProtocolTail &rArr; GetCrc16
</UL>
<BR>[Calls]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;packIMEI
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolTail
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolHead
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
</UL>

<P><STRONG><a name="[181]"></a>createProtocol_12</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, app_serverprotocol.o(i.createProtocol_12))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = createProtocol_12 &rArr; protocolGPSpack &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUpdateStep
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolGPSpack
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolTail
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolHead
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getModuleRssi
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
</UL>

<P><STRONG><a name="[184]"></a>createProtocol_13</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, app_serverprotocol.o(i.createProtocol_13))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = createProtocol_13 &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUpdateStep
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatteryLevel
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolTail
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolHead
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentGPSInfo
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getModuleRssi
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
</UL>

<P><STRONG><a name="[188]"></a>createProtocol_21</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, app_serverprotocol.o(i.createProtocol_21))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = createProtocol_21 &rArr; createProtocolTail_7979 &rArr; GetCrc16
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolTail_7979
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
</UL>

<P><STRONG><a name="[189]"></a>createProtocol_8A</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_serverprotocol.o(i.createProtocol_8A))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = createProtocol_8A &rArr; createProtocolTail &rArr; GetCrc16
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolTail
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolHead
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
</UL>

<P><STRONG><a name="[18a]"></a>createSystemTask</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_kernal.o(i.createSystemTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = createSystemTask &rArr; startTimer &rArr; Create_Timer &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myAppConfig
</UL>

<P><STRONG><a name="[141]"></a>csqRequest</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_net.o(i.csqRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = csqRequest &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRunFsm
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcAllParse
</UL>

<P><STRONG><a name="[153]"></a>decryptSN</STRONG> (Thumb, 158 bytes, Stack size 64 bytes, app_sn.o(i.decryptSN))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = decryptSN &rArr; ztvm_encrypt_untrides &rArr; ztvm_encrypt_des &rArr; encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ztvm_encrypt_untrides
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XINGSHENG_ID_Decoder
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSNInstruction
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdZTSNParse
</UL>

<P><STRONG><a name="[18c]"></a>delSmsOndDay</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_task.o(i.delSmsOndDay))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = delSmsOndDay &rArr; deleteMessage &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskRunInOneSecond
</UL>

<P><STRONG><a name="[41]"></a>deleteMessage</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_net.o(i.deleteMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = deleteMessage &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delSmsOndDay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_instructioncmd.o(i.sendMessageWithDifMode)
</UL>
<P><STRONG><a name="[18d]"></a>disPlaySystemTime</STRONG> (Thumb, 104 bytes, Stack size 80 bytes, app_port.o(i.disPlaySystemTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = disPlaySystemTime &rArr; portClearStep &rArr; clearStep &rArr; mir3da_register_write &rArr; iicWriteData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetSystemDateTime
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portClearStep
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskRunInOneSecond
</UL>

<P><STRONG><a name="[18f]"></a>distinguishOK</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_sys.o(i.distinguishOK))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = distinguishOK &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58xiicParser
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58xgauthParser
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58cgdcontParser
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPsetupParser
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FSLISTParser
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[190]"></a>do123Instruction</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, app_instructioncmd.o(i.do123Instruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = do123Instruction &rArr; gpsRequestSet &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemStartTime
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestSet
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save123InstructionId
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[195]"></a>doACCCTLGNSSInstrucion</STRONG> (Thumb, 128 bytes, Stack size 120 bytes, app_instructioncmd.o(i.doACCCTLGNSSInstrucion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = doACCCTLGNSSInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveACCCTLGNSS
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestSet
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestClear
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[199]"></a>doAPNInstruction</STRONG> (Thumb, 224 bytes, Stack size 240 bytes, app_instructioncmd.o(i.doAPNInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404<LI>Call Chain = doAPNInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnUser
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnPswd
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnName
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetApnUser
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetApnPswd
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetApnName
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1a0]"></a>doAdccalInstrucion</STRONG> (Thumb, 186 bytes, Stack size 144 bytes, app_instructioncmd.o(i.doAdccalInstrucion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1308<LI>Call Chain = doAdccalInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetAdc
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAdcCal
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1a1]"></a>doAlarmModeInstrucion</STRONG> (Thumb, 124 bytes, Stack size 128 bytes, app_instructioncmd.o(i.doAlarmModeInstrucion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1292<LI>Call Chain = doAlarmModeInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strpach
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveLightAlarmMode
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1a4]"></a>doAnswerInstrucion</STRONG> (Thumb, 100 bytes, Stack size 120 bytes, app_instructioncmd.o(i.doAnswerInstrucion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = doAnswerInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAutoAnswer
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1a6]"></a>doAudioInstrucion</STRONG> (Thumb, 126 bytes, Stack size 120 bytes, app_instructioncmd.o(i.doAudioInstrucion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = doAudioInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1a7]"></a>doBFInstruction</STRONG> (Thumb, 44 bytes, Stack size 112 bytes, app_instructioncmd.o(i.doBFInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1276<LI>Call Chain = doBFInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveBF
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1a9]"></a>doCFInstruction</STRONG> (Thumb, 44 bytes, Stack size 112 bytes, app_instructioncmd.o(i.doCFInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1276<LI>Call Chain = doCFInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveBF
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1aa]"></a>doDebugInstrucion</STRONG> (Thumb, 542 bytes, Stack size 344 bytes, app_instructioncmd.o(i.doDebugInstrucion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1508<LI>Call Chain = doDebugInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strpach
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestSet
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartSend
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetSystemDateTime
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portClearStep
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMode2cnt
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMode1Timer
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1ad]"></a>doFactoryInstrucion</STRONG> (Thumb, 66 bytes, Stack size 112 bytes, app_instructioncmd.o(i.doFactoryInstrucion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1276<LI>Call Chain = doFactoryInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strpach
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[142]"></a>doFactoryTestInstruction</STRONG> (Thumb, 320 bytes, Stack size 336 bytes, app_instructioncmd.o(i.doFactoryTestInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1500<LI>Call Chain = doFactoryTestInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatVoltage
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentGPSInfo
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getModuleRssi
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_gsensor_id
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcAllParse
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1af]"></a>doFenceInstrucion</STRONG> (Thumb, 74 bytes, Stack size 120 bytes, app_instructioncmd.o(i.doFenceInstrucion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = doFenceInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveFence
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1b1]"></a>doHbtInstruction</STRONG> (Thumb, 82 bytes, Stack size 120 bytes, app_instructioncmd.o(i.doHbtInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = doHbtInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveHeartbeatInterval
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetHeartbeatInterval
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1b4]"></a>doJtInstruction</STRONG> (Thumb, 194 bytes, Stack size 136 bytes, app_instructioncmd.o(i.doJtInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1300<LI>Call Chain = doJtInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resIsCycleRuning
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recStart
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1b6]"></a>doLEDInstruction</STRONG> (Thumb, 94 bytes, Stack size 120 bytes, app_instructioncmd.o(i.doLEDInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = doLEDInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveLedCtl
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1b8]"></a>doLOWWInstruction</STRONG> (Thumb, 150 bytes, Stack size 136 bytes, app_instructioncmd.o(i.doLOWWInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1300<LI>Call Chain = doLOWWInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveLoww
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetLoww
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1bb]"></a>doModeInstruction</STRONG> (Thumb, 912 bytes, Stack size 264 bytes, app_instructioncmd.o(i.doModeInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428<LI>Call Chain = doModeInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemStartTime
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;terminalAccoff
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTerminalAccState
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetNextWakeUpTime
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetNextAlarmTime
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveNoNetWakeUpMinutes
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMode1GapDay
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMode
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveInterval
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveGPSUploadInterval
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAlarmTime
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetGPSUploadInterval
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestSet
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestGet
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestClear
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1c5]"></a>doPOITYPEInstruction</STRONG> (Thumb, 122 bytes, Stack size 128 bytes, app_instructioncmd.o(i.doPOITYPEInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1292<LI>Call Chain = doPOITYPEInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSavePoitype
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1c7]"></a>doParamInstruction</STRONG> (Thumb, 412 bytes, Stack size 208 bytes, app_instructioncmd.o(i.doParamInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1372<LI>Call Chain = doParamInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetSnNumber
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetServer
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1c9]"></a>doPdopInstrucion</STRONG> (Thumb, 108 bytes, Stack size 120 bytes, app_instructioncmd.o(i.doPdopInstrucion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = doPdopInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSavePdop
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1cc]"></a>doResetInstruction</STRONG> (Thumb, 56 bytes, Stack size 64 bytes, app_instructioncmd.o(i.doResetInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1228<LI>Call Chain = doResetInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMode2cnt
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1cd]"></a>doSNInstruction</STRONG> (Thumb, 148 bytes, Stack size 112 bytes, app_instructioncmd.o(i.doSNInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = doSNInstruction &rArr; decryptSN &rArr; ztvm_encrypt_untrides &rArr; ztvm_encrypt_des &rArr; encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strpach
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeHexStringToByteArray
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveSnNumber
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetSnNumber
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decryptSN
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1ce]"></a>doServerInstruction</STRONG> (Thumb, 86 bytes, Stack size 120 bytes, app_instructioncmd.o(i.doServerInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = doServerInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveServer
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetServer
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1d0]"></a>doSetAgpsInstruction</STRONG> (Thumb, 154 bytes, Stack size 136 bytes, app_instructioncmd.o(i.doSetAgpsInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1300<LI>Call Chain = doSetAgpsInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsUser
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsServer
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsPswd
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsPort
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1d5]"></a>doSetblemacInstrucion</STRONG> (Thumb, 178 bytes, Stack size 136 bytes, app_instructioncmd.o(i.doSetblemacInstrucion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1300<LI>Call Chain = doSetblemacInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveBleMac
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1d7]"></a>doSmsreplyInstrucion</STRONG> (Thumb, 94 bytes, Stack size 120 bytes, app_instructioncmd.o(i.doSmsreplyInstrucion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = doSmsreplyInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveSmsreply
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atol
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1d9]"></a>doStaticTimeInstrucion</STRONG> (Thumb, 72 bytes, Stack size 120 bytes, app_instructioncmd.o(i.doStaticTimeInstrucion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = doStaticTimeInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveStaticTime
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1db]"></a>doStatusInstruction</STRONG> (Thumb, 270 bytes, Stack size 136 bytes, app_instructioncmd.o(i.doStatusInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1300<LI>Call Chain = doStatusInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTerminalChargeState
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTerminalAccState
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUpdateStep
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isProtocolReday
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentGPSInfo
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getModuleRssi
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1dd]"></a>doTTSInstruction</STRONG> (Thumb, 144 bytes, Stack size 328 bytes, app_instructioncmd.o(i.doTTSInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492<LI>Call Chain = doTTSInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeByteArrayToHexString
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNodeCmd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1de]"></a>doTurnAlgInstrucion</STRONG> (Thumb, 100 bytes, Stack size 120 bytes, app_instructioncmd.o(i.doTurnAlgInstrucion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = doTurnAlgInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveTurnalg
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1e0]"></a>doUPSInstruction</STRONG> (Thumb, 112 bytes, Stack size 272 bytes, app_instructioncmd.o(i.doUPSInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436<LI>Call Chain = doUPSInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveUpdateStatus
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveUPSServer
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetUPSServer
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1e4]"></a>doUTCInstruction</STRONG> (Thumb, 138 bytes, Stack size 120 bytes, app_instructioncmd.o(i.doUTCInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = doUTCInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRTCtimeRequest
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveUTC
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1e7]"></a>doVersionInstruction</STRONG> (Thumb, 46 bytes, Stack size 120 bytes, app_instructioncmd.o(i.doVersionInstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = doVersionInstruction &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1e8]"></a>doVibrangeInstrucion</STRONG> (Thumb, 86 bytes, Stack size 120 bytes, app_instructioncmd.o(i.doVibrangeInstrucion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = doVibrangeInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRange
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveVibrange
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1ea]"></a>doVolInstrucion</STRONG> (Thumb, 78 bytes, Stack size 120 bytes, app_instructioncmd.o(i.doVolInstrucion))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = doVolInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setModuleVol
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>

<P><STRONG><a name="[1ed]"></a>dorequestSend123</STRONG> (Thumb, 152 bytes, Stack size 224 bytes, app_instructioncmd.o(i.dorequestSend123))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388<LI>Call Chain = dorequestSend123 &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetSystemDateTime
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reCover123InstructionId
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentGPSInfo
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUplodOnePointTask
</UL>

<P><STRONG><a name="[1f4]"></a>exitNetCtl</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, app_task.o(i.exitNetCtl))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = exitNetCtl &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netExitStopMode
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestTask
</UL>

<P><STRONG><a name="[7f]"></a>free</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopTimer
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kernalRun
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNodeCmd
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outPutNodeCmd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[14d]"></a>getBatVoltage</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_task.o(i.getBatVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = getBatVoltage &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetAdc
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtProcess
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryTestInstruction
</UL>

<P><STRONG><a name="[125]"></a>getCharIndex</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_sys.o(i.getCharIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = getCharIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseGPS
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBlePRecvParser
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBleCRecvParser
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58WIFISCANParser
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPRecvParser
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58GmrParser
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FswrParser
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FSLISTParser
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CSQParser
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CMTIParser
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CMGRParser
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CIMIParser
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CGSNParser
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CCIDParser
</UL>

<P><STRONG><a name="[124]"></a>getCharIndexWithNum</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, app_sys.o(i.getCharIndexWithNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = getCharIndexWithNum
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBlePRecvParser
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBleCRecvParser
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CMGRParser
</UL>

<P><STRONG><a name="[15e]"></a>getCurrentGPSInfo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_gps.o(i.getCurrentGPSInfo))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_13
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUploadPointToServer
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dorequestSend123
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorTapTask
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUplodOnePointTask
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58WIFISCANParser
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceOfPoint
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStatusInstruction
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryTestInstruction
</UL>

<P><STRONG><a name="[165]"></a>getGSPfifo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_gps.o(i.getGSPfifo))
<BR><BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheGPSCornerPoint
</UL>

<P><STRONG><a name="[171]"></a>getLastFixedGPSInfo</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_gps.o(i.getLastFixedGPSInfo))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol16
</UL>

<P><STRONG><a name="[148]"></a>getModuleICCID</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_net.o(i.getModuleICCID))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF1
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcIMSIParseRespon
</UL>

<P><STRONG><a name="[14b]"></a>getModuleIMEI</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_net.o(i.getModuleIMEI))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdIMEIParseRespon
</UL>

<P><STRONG><a name="[149]"></a>getModuleIMSI</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_net.o(i.getModuleIMSI))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF1
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcIMSIParseRespon
</UL>

<P><STRONG><a name="[183]"></a>getModuleRssi</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_net.o(i.getModuleRssi))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_13
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_12
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStatusInstruction
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryTestInstruction
</UL>

<P><STRONG><a name="[1f6]"></a>getStep</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_mir3da.o(i.getStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUpdateStep
</UL>

<P><STRONG><a name="[14f]"></a>getTerminalAccState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_sys.o(i.getTerminalAccState))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorTapTask
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestTask
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoSleepTask
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeShutDownQuickly
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeRun
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStatusInstruction
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
</UL>

<P><STRONG><a name="[1dc]"></a>getTerminalChargeState</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_sys.o(i.getTerminalChargeState))
<BR><BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStatusInstruction
</UL>

<P><STRONG><a name="[24d]"></a>gpsChangeFsmState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_task.o(i.gpsChangeFsmState))
<BR><BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58MygpsstateParser
</UL>

<P><STRONG><a name="[1f8]"></a>gpsClearCurrentGPSInfo</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_gps.o(i.gpsClearCurrentGPSInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpsClearCurrentGPSInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;terminalGPSUnFixed
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsOutputCheckTask
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestClose
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58MygpsstateParser
</UL>

<P><STRONG><a name="[119]"></a>gpsFilter</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_gps.o(i.gpsFilter))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addNewGPSInfo
</UL>

<P><STRONG><a name="[159]"></a>gpsIsRun</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_gpsrestore.o(i.gpsIsRun))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoSleepTask
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FswrParser
</UL>

<P><STRONG><a name="[246]"></a>gpsNoRestoreFileToRead</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_gpsrestore.o(i.gpsNoRestoreFileToRead))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FSLISTParser
</UL>

<P><STRONG><a name="[1f9]"></a>gpsOutputCheckTask</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, app_task.o(i.gpsOutputCheckTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = gpsOutputCheckTask &rArr; closeModuleGPS &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemLedStatus
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsClearCurrentGPSInfo
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;closeModuleGPS
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskRunInOneSecond
</UL>

<P><STRONG><a name="[1fa]"></a>gpsReadFromModuleAndSendtoServe</STRONG> (Thumb, 144 bytes, Stack size 224 bytes, app_gpsrestore.o(i.gpsReadFromModuleAndSendtoServe))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = gpsReadFromModuleAndSendtoServe &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uploadGpsRestoreData
</UL>

<P><STRONG><a name="[27d]"></a>gpsReadRestoreReset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_gpsrestore.o(i.gpsReadRestoreReset))
<BR><BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRunFsm
</UL>

<P><STRONG><a name="[196]"></a>gpsRequestClear</STRONG> (Thumb, 36 bytes, Stack size 48 bytes, app_task.o(i.gpsRequestClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gpsRequestClear &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemShutDown
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorTapTask
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorIntervalCheck
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUplodOnePointTask
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doACCCTLGNSSInstrucion
</UL>

<P><STRONG><a name="[1c1]"></a>gpsRequestGet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_task.o(i.gpsRequestGet))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tapInt
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemShutDown
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorTapTask
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorIntervalCheck
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUplodOnePointTask
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
</UL>

<P><STRONG><a name="[192]"></a>gpsRequestSet</STRONG> (Thumb, 36 bytes, Stack size 48 bytes, app_task.o(i.gpsRequestSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gpsRequestSet &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tapInt
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uploadRequestInMode4
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hearbeatRequest
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorTapTask
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorIntervalCheck
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStart
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPoitypeRequest
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doACCCTLGNSSInstrucion
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do123Instruction
</UL>

<P><STRONG><a name="[1fe]"></a>gpsRequestTask</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, app_task.o(i.gpsRequestTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = gpsRequestTask &rArr; gpsRequestOpen &rArr; setAgps &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRTCtimeRequest
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTerminalAccState
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestOpen
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestClose
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openModuleGPS
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netWorkModuleRunOk
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskRunInOneSecond
</UL>

<P><STRONG><a name="[200]"></a>gpsRestoreDataSend</STRONG> (Thumb, 230 bytes, Stack size 224 bytes, app_serverprotocol.o(i.gpsRestoreDataSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = gpsRestoreDataSend &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeByteArrayToHexString
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolTail
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolSerial
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolHead
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FswrParser
</UL>

<P><STRONG><a name="[201]"></a>gpsRestoreWriteData</STRONG> (Thumb, 68 bytes, Stack size 56 bytes, app_gpsrestore.o(i.gpsRestoreWriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeByteArrayToHexString
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNodeCmd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
</UL>

<P><STRONG><a name="[202]"></a>gpsUpdateRestoreFileNameAndTotalSize</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_gpsrestore.o(i.gpsUpdateRestoreFileNameAndTotalSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpsUpdateRestoreFileNameAndTotalSize
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FSLISTParser
</UL>

<P><STRONG><a name="[203]"></a>gpsUploadPointToServer</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, app_gpsarithmetic.o(i.gpsUploadPointToServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 1236<LI>Call Chain = gpsUploadPointToServer &rArr; calculateTheGPSCornerPoint &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentGPSInfo
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;initLastPoint
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheGPSCornerPoint
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceOfPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeRun
</UL>

<P><STRONG><a name="[204]"></a>gpsUplodOnePointTask</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, app_task.o(i.gpsUplodOnePointTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404<LI>Call Chain = gpsUplodOnePointTask &rArr; dorequestSend123 &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestGet
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isProtocolReday
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dorequestSend123
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestClear
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentGPSInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskRunInOneSecond
</UL>

<P><STRONG><a name="[205]"></a>gsensorIntervalCheck</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, app_task.o(i.gsensorIntervalCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = gsensorIntervalCheck &rArr; startTimer &rArr; Create_Timer &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestSet
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestGet
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readInterruptConfig
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestClear
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskRunInOneSecond
</UL>

<P><STRONG><a name="[207]"></a>gsensorTapTask</STRONG> (Thumb, 382 bytes, Stack size 24 bytes, app_task.o(i.gsensorTapTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1172<LI>Call Chain = gsensorTapTask &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;terminalAccon
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;terminalAccoff
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTerminalAccState
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmRequestSet
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestSet
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestGet
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isProtocolReday
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestClear
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentGPSInfo
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskRunInOneSecond
</UL>

<P><STRONG><a name="[dc]"></a>halRecvInIdle</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_port.o(i.halRecvInIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = halRecvInIdle &rArr; halGetInDma &rArr; HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halGetInDma
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPUART1_IRQHandler
</UL>

<P><STRONG><a name="[20b]"></a>hearbeatRequest</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, app_task.o(i.hearbeatRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = hearbeatRequest &rArr; gpsRequestSet &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestSet
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isProtocolReday
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestTask
</UL>

<P><STRONG><a name="[20c]"></a>iicReadData</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, app_port.o(i.iicReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Write_Byte
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Stop
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Start
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Recv_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_register_read
</UL>

<P><STRONG><a name="[20d]"></a>iicWriteData</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, app_port.o(i.iicWriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = iicWriteData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Write_Byte
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Stop
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_register_write
</UL>

<P><STRONG><a name="[161]"></a>initLastPoint</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, app_gpsarithmetic.o(i.initLastPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = initLastPoint &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUploadPointToServer
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceOfPoint
</UL>

<P><STRONG><a name="[129]"></a>instructionParser</STRONG> (Thumb, 72 bytes, Stack size 520 bytes, app_atcmd.o(i.instructionParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 2100<LI>Call Chain = instructionParser &rArr; doinstruction &rArr; doDebugInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringToItem
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mycmdPatch
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doinstruction
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRxParser
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBlePRecvParser
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CMGRParser
</UL>

<P><STRONG><a name="[28c]"></a>isModulePowerOn</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_net.o(i.isModulePowerOn))
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uploadRequestInMode4
</UL>

<P><STRONG><a name="[150]"></a>isModuleRunNormal</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_net.o(i.isModuleRunNormal))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isProtocolReday
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoSleepTask
</UL>

<P><STRONG><a name="[11e]"></a>isProtocolReday</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_serverprotocol.o(i.isProtocolReday))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isProtocolReday
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isModuleRunNormal
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmUploadRequest
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recRecordUploadTask
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifiUploadRequestTask
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lbsUploadRequestTask
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hearbeatRequest
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorTapTask
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUplodOnePointTask
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeShutDownQuickly
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStatusInstruction
</UL>

<P><STRONG><a name="[20e]"></a>kernalRun</STRONG> (Thumb, 148 bytes, Stack size 128 bytes, app_kernal.o(i.kernalRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = kernalRun &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myAppRun
</UL>

<P><STRONG><a name="[20f]"></a>latitude_to_double</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, app_nmea.o(i.latitude_to_double))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = latitude_to_double &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_RMC
</UL>

<P><STRONG><a name="[211]"></a>lbsUploadRequestTask</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, app_task.o(i.lbsUploadRequestTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1164<LI>Call Chain = lbsUploadRequestTask &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isProtocolReday
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskRunInOneSecond
</UL>

<P><STRONG><a name="[39]"></a>ledRunTask</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_task.o(i.ledRunTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ledRunTask &rArr; signalLedTask
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;signalLedTask
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsLedTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_user.o(i.myAppConfig)
</UL>
<P><STRONG><a name="[214]"></a>longitude_to_double</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, app_nmea.o(i.longitude_to_double))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = longitude_to_double &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_RMC
</UL>

<P><STRONG><a name="[22]"></a>main</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1180<LI>Call Chain = main &rArr; myAppRun &rArr; alarmUploadRequest &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myAppRun
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myAppConfig
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IWDG_Init
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[7d]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Timer
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNodeCmd
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[217]"></a>mir3da_init</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, app_mir3da.o(i.mir3da_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = mir3da_init &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_register_write
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
</UL>

<P><STRONG><a name="[218]"></a>mir3da_open_interrupt</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, app_mir3da.o(i.mir3da_open_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = mir3da_open_interrupt &rArr; mir3da_register_write &rArr; iicWriteData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_register_write
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
</UL>

<P><STRONG><a name="[1f7]"></a>mir3da_register_read</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_mir3da.o(i.mir3da_register_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iicReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_init
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getStep
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readInterruptConfig
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_gsensor_id
</UL>

<P><STRONG><a name="[16e]"></a>mir3da_register_write</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_mir3da.o(i.mir3da_register_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = mir3da_register_write &rArr; iicWriteData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iicWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRange
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startStep
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_set_enable
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_open_interrupt
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearStep
</UL>

<P><STRONG><a name="[219]"></a>mir3da_set_enable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_mir3da.o(i.mir3da_set_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = mir3da_set_enable &rArr; mir3da_register_write &rArr; iicWriteData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_register_write
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
</UL>

<P><STRONG><a name="[32]"></a>mode4Callback</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_net.o(i.mode4Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = mode4Callback &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58_ChangeInvokeStatus
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netConnectReset
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_instructioncmd.o(i.doModeInstruction)
</UL>
<P><STRONG><a name="[221]"></a>modulePowerOff</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_net.o(i.modulePowerOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = modulePowerOff &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleInfoInit
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netConnectReset
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBleInfoReset
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netModuleShutdown
</UL>

<P><STRONG><a name="[222]"></a>modulePowerOn</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app_net.o(i.modulePowerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = modulePowerOn &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleInfoInit
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBleInfoReset
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netModuleStartup
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
</UL>

<P><STRONG><a name="[2f]"></a>moduleReset</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app_net.o(i.moduleReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = moduleReset &rArr; startTimer &rArr; Create_Timer &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleInfoInit
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemLedStatus
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netConnectReset
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBleInfoReset
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResetProcess
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_instructioncmd.o(i.doAPNInstruction)
</UL>
<P><STRONG><a name="[40]"></a>moduleResetProcess</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_serverprotocol.o(i.moduleResetProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = moduleResetProcess &rArr; moduleReset &rArr; startTimer &rArr; Create_Timer &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_serverprotocol.o(i.protocolRunFsm)
</UL>
<P><STRONG><a name="[3d]"></a>moduleResponParaser</STRONG> (Thumb, 542 bytes, Stack size 32 bytes, app_net.o(i.moduleResponParaser))
<BR><BR>[Stack]<UL><LI>Max Depth = 2852<LI>Call Chain = moduleResponParaser &rArr; n58TCPRecvParser &rArr; protocolReceivePush &rArr; protocolRxParser &rArr; instructionParser &rArr; doinstruction &rArr; doDebugInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strstr
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distinguishOK
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessageWL
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSystemReset
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TcpsendParase
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBlePRecvParser
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBleCRecvParser
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58xiicqueryParser
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58xiicParser
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58xgauthParser
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58mysysteminfoParser
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58cgdcontParser
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58cgattParser
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58WIFISCANParser
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPsetupParser
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPcloseParser
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPRecvParser
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58NwurcblestatParser
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58NwbtblepwrParser
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58NwbleroleParser
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58NwblecconParser
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58MylacidParser
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58MygpsstateParser
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58MygpsposParser
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58GmrParser
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FswrParser
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FSLISTParser
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CSQParser
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CREGParser
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CMTIParser
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CMGRParser
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CIMIParser
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CGSNParser
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CCIDParser
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58AudplayParser
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58AtaParser
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(i.netModuleStartup)
</UL>
<P><STRONG><a name="[215]"></a>myAppConfig</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, app_user.o(i.myAppConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = myAppConfig &rArr; createSystemTask &rArr; startTimer &rArr; Create_Timer &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartCfg
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portLowPowerCfg
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createSystemTask
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADCEx_Calibration_Start
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[216]"></a>myAppRun</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_user.o(i.myAppRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 1180<LI>Call Chain = myAppRun &rArr; alarmUploadRequest &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portPollUart
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kernalRun
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestTask
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmUploadRequest
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[123]"></a>my_getstrindex</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, app_sys.o(i.my_getstrindex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = my_getstrindex &rArr; my_strpach
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strpach
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBlePRecvParser
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBleCRecvParser
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58xiicqueryParser
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58mysysteminfoParser
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58cgattParser
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58WIFISCANParser
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPsetupParser
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPcloseParser
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPRecvParser
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58NwurcblestatParser
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58NwbtblepwrParser
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58NwbleroleParser
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58NwblecconParser
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58MylacidParser
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58MygpsstateParser
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58MygpsposParser
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58GmrParser
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FswrParser
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CSQParser
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CREGParser
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CMTIParser
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CMGRParser
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CIMIParser
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CGSNParser
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CCIDParser
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58AudplayParser
</UL>

<P><STRONG><a name="[1a2]"></a>my_strpach</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, app_sys.o(i.my_strpach))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = my_strpach
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strstr
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_GSV
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FSLISTParser
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSNInstruction
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryInstrucion
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doDebugInstrucion
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAlarmModeInstrucion
</UL>

<P><STRONG><a name="[139]"></a>my_strstr</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, app_sys.o(i.my_strstr))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = my_strstr &rArr; my_strpach
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strpach
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TcpsendParase
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFMPCnmeaParase
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseGPS
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58MygpsstateParser
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58AtaParser
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[3c]"></a>n58ATA</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_net.o(i.n58ATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = n58ATA &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_net.o(i.n58AtaParser)
</UL>
<P><STRONG><a name="[22a]"></a>n58AtaParser</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_net.o(i.n58AtaParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = n58AtaParser &rArr; startTimer &rArr; Create_Timer &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strstr
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[22e]"></a>n58AudplayParser</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, app_net.o(i.n58AudplayParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = n58AudplayParser &rArr; startTimer &rArr; Create_Timer &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[231]"></a>n58CCIDParser</STRONG> (Thumb, 106 bytes, Stack size 88 bytes, app_net.o(i.n58CCIDParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = n58CCIDParser &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndex
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[22f]"></a>n58CGSNParser</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, app_net.o(i.n58CGSNParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = n58CGSNParser &rArr; my_getstrindex &rArr; my_strpach
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[230]"></a>n58CIMIParser</STRONG> (Thumb, 180 bytes, Stack size 64 bytes, app_net.o(i.n58CIMIParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = n58CIMIParser &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndex
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[228]"></a>n58CMGRParser</STRONG> (Thumb, 190 bytes, Stack size 128 bytes, app_net.o(i.n58CMGRParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 2228<LI>Call Chain = n58CMGRParser &rArr; instructionParser &rArr; doinstruction &rArr; doDebugInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndexWithNum
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndex
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;instructionParser
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[227]"></a>n58CMTIParser</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, app_net.o(i.n58CMTIParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = n58CMTIParser &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndex
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[233]"></a>n58CREGParser</STRONG> (Thumb, 136 bytes, Stack size 176 bytes, app_net.o(i.n58CREGParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = n58CREGParser &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[232]"></a>n58CSQParser</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, app_net.o(i.n58CSQParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = n58CSQParser &rArr; clearHbtTimer &rArr; stopTimer &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndex
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearHbtTimer
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[23c]"></a>n58FSLISTParser</STRONG> (Thumb, 344 bytes, Stack size 272 bytes, app_net.o(i.n58FSLISTParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = n58FSLISTParser &rArr; recUpdateFileSize &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strpach
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndex
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distinguishOK
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recUpdateFileSize
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recUpdateFileName
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recNoFileToread
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUpdateRestoreFileNameAndTotalSize
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsNoRestoreFileToRead
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[23d]"></a>n58FswrParser</STRONG> (Thumb, 250 bytes, Stack size 1192 bytes, app_net.o(i.n58FswrParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 1772<LI>Call Chain = n58FswrParser &rArr; createProtocol62 &rArr; sendDataToServer &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndex
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recReadFileOk
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recIsRun
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recGetRecStruct
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRestoreDataSend
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsIsRun
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol62
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDataToServer
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[240]"></a>n58GmrParser</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, app_net.o(i.n58GmrParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = n58GmrParser &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndex
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[223]"></a>n58MygpsposParser</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_net.o(i.n58MygpsposParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = n58MygpsposParser &rArr; nmeaParse &rArr; parseGPS &rArr; parse_RMC &rArr; showgpsinfo &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmeaParse
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[23b]"></a>n58MygpsstateParser</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, app_net.o(i.n58MygpsstateParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = n58MygpsstateParser &rArr; my_strstr &rArr; my_strpach
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strstr
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemLedStatus
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsClearCurrentGPSInfo
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsChangeFsmState
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[22b]"></a>n58MylacidParser</STRONG> (Thumb, 178 bytes, Stack size 176 bytes, app_net.o(i.n58MylacidParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = n58MylacidParser &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtoul
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[22d]"></a>n58NwblecconParser</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, app_net.o(i.n58NwblecconParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = n58NwblecconParser &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[23f]"></a>n58NwbleroleParser</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, app_net.o(i.n58NwbleroleParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = n58NwbleroleParser &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[23e]"></a>n58NwbtblepwrParser</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, app_net.o(i.n58NwbtblepwrParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = n58NwbtblepwrParser &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[22c]"></a>n58NwurcblestatParser</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, app_net.o(i.n58NwurcblestatParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = n58NwurcblestatParser &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[224]"></a>n58TCPRecvParser</STRONG> (Thumb, 194 bytes, Stack size 544 bytes, app_net.o(i.n58TCPRecvParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 2820<LI>Call Chain = n58TCPRecvParser &rArr; protocolReceivePush &rArr; protocolRxParser &rArr; instructionParser &rArr; doinstruction &rArr; doDebugInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndex
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeByteArrayToHexString
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolReceivePush
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[226]"></a>n58TCPcloseParser</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, app_net.o(i.n58TCPcloseParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = n58TCPcloseParser &rArr; N58_ChangeInvokeStatus &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58_ChangeInvokeStatus
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[225]"></a>n58TCPsetupParser</STRONG> (Thumb, 234 bytes, Stack size 176 bytes, app_net.o(i.n58TCPsetupParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = n58TCPsetupParser &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distinguishOK
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[229]"></a>n58WIFISCANParser</STRONG> (Thumb, 174 bytes, Stack size 400 bytes, app_net.o(i.n58WIFISCANParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 1548<LI>Call Chain = n58WIFISCANParser &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndex
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeHexStringToByteArray
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentGPSInfo
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF3
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[234]"></a>n58cgattParser</STRONG> (Thumb, 52 bytes, Stack size 40 bytes, app_net.o(i.n58cgattParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = n58cgattParser &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[236]"></a>n58cgdcontParser</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_net.o(i.n58cgdcontParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = n58cgdcontParser &rArr; distinguishOK &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distinguishOK
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[235]"></a>n58mysysteminfoParser</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_net.o(i.n58mysysteminfoParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = n58mysysteminfoParser &rArr; my_getstrindex &rArr; my_strpach
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[24f]"></a>n58setAPN</STRONG> (Thumb, 26 bytes, Stack size 48 bytes, app_net.o(i.n58setAPN))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = n58setAPN &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
</UL>

<P><STRONG><a name="[250]"></a>n58setXGAUTH</STRONG> (Thumb, 30 bytes, Stack size 48 bytes, app_net.o(i.n58setXGAUTH))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = n58setXGAUTH &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
</UL>

<P><STRONG><a name="[237]"></a>n58xgauthParser</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_net.o(i.n58xgauthParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = n58xgauthParser &rArr; distinguishOK &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distinguishOK
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[238]"></a>n58xiicParser</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_net.o(i.n58xiicParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = n58xiicParser &rArr; distinguishOK &rArr; strstr
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;distinguishOK
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[239]"></a>n58xiicqueryParser</STRONG> (Thumb, 136 bytes, Stack size 176 bytes, app_net.o(i.n58xiicqueryParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = n58xiicqueryParser &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_getstrindex
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[15c]"></a>netConnectReset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_serverprotocol.o(i.netConnectReset))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoSleepTask
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleReset
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modulePowerOff
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode4Callback
</UL>

<P><STRONG><a name="[251]"></a>netEnterStopMode</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, app_net.o(i.netEnterStopMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = netEnterStopMode &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestSet
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
</UL>

<P><STRONG><a name="[1f5]"></a>netExitStopMode</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_net.o(i.netExitStopMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = netExitStopMode &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestSet
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitNetCtl
</UL>

<P><STRONG><a name="[1ff]"></a>netWorkModuleRunOk</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_net.o(i.netWorkModuleRunOk))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestTask
</UL>

<P><STRONG><a name="[255]"></a>networkConnectProcess</STRONG> (Thumb, 1256 bytes, Stack size 32 bytes, app_net.o(i.networkConnectProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 1204<LI>Call Chain = networkConnectProcess &rArr; protocolRunFsm &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestSet
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58_CreateSocket
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58_ChangeInvokeStatus
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRunFsm
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netConnectReset
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netEnterStopMode
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58setXGAUTH
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58setAPN
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleReset
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modulePowerOn
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode4Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58enterFlightMode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskRunInOneSecond
</UL>

<P><STRONG><a name="[24c]"></a>nmeaParse</STRONG> (Thumb, 80 bytes, Stack size 128 bytes, app_nmea.o(i.nmeaParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 1144<LI>Call Chain = nmeaParse &rArr; parseGPS &rArr; parse_RMC &rArr; showgpsinfo &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseGPS
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58MygpsposParser
</UL>

<P><STRONG><a name="[13a]"></a>openModuleGPS</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_net.o(i.openModuleGPS))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = openModuleGPS &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFMPCnmeaParase
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestTask
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestOpen
</UL>

<P><STRONG><a name="[3a]"></a>outPutNodeCmd</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, app_net.o(i.outPutNodeCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = outPutNodeCmd &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartSend
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_user.o(i.myAppConfig)
</UL>
<P><STRONG><a name="[1ae]"></a>paramDefaultInit</STRONG> (Thumb, 420 bytes, Stack size 24 bytes, app_param.o(i.paramDefaultInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = paramDefaultInit &rArr; paramSaveServer &rArr; eepromWriteWord &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveStep
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMallocFault
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveVibrange
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveUTC
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveTurnalg
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveStaticTime
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveSnNumber
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveSmsreply
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveServer
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSavePdop
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveNoNetWakeUpMinutes
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMode2cnt
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMode1Timer
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveLoww
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveHeartbeatInterval
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveHardFault
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveGPSUploadInterval
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveFence
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveBF
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAutoParam
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAutoAnswer
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnUser
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnPswd
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnName
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsUser
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsServer
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsPswd
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsPort
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAdcCal
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveACCCTLGNSS
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteTwoBytes
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryInstrucion
</UL>

<P><STRONG><a name="[25a]"></a>paramGetAdcCal</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_param.o(i.paramGetAdcCal))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = paramGetAdcCal &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[260]"></a>paramGetAgpsPort</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_param.o(i.paramGetAgpsPort))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[262]"></a>paramGetAgpsPswd</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_param.o(i.paramGetAgpsPswd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = paramGetAgpsPswd
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[25f]"></a>paramGetAgpsServer</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_param.o(i.paramGetAgpsServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = paramGetAgpsServer
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[261]"></a>paramGetAgpsUser</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_param.o(i.paramGetAgpsUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = paramGetAgpsUser
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[19d]"></a>paramGetApnName</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_param.o(i.paramGetApnName))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAPNInstruction
</UL>

<P><STRONG><a name="[19f]"></a>paramGetApnPswd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_param.o(i.paramGetApnPswd))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAPNInstruction
</UL>

<P><STRONG><a name="[19e]"></a>paramGetApnUser</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_param.o(i.paramGetApnUser))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAPNInstruction
</UL>

<P><STRONG><a name="[263]"></a>paramGetAutoParam</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_param.o(i.paramGetAutoParam))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[25b]"></a>paramGetBleMac</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app_param.o(i.paramGetBleMac))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[12f]"></a>paramGetCM</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_param.o(i.paramGetCM))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcCMParse
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdCmGetParser
</UL>

<P><STRONG><a name="[25c]"></a>paramGetCodeVersion</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_param.o(i.paramGetCodeVersion))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[1bc]"></a>paramGetGPSUploadInterval</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_param.o(i.paramGetGPSUploadInterval))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
</UL>

<P><STRONG><a name="[1b3]"></a>paramGetHeartbeatInterval</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_param.o(i.paramGetHeartbeatInterval))
<BR><BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doHbtInstruction
</UL>

<P><STRONG><a name="[1ba]"></a>paramGetLoww</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_param.o(i.paramGetLoww))
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLOWWInstruction
</UL>

<P><STRONG><a name="[25d]"></a>paramGetMode2cnt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_param.o(i.paramGetMode2cnt))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[1c8]"></a>paramGetServer</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_param.o(i.paramGetServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = paramGetServer
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doServerInstruction
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doParamInstruction
</UL>

<P><STRONG><a name="[155]"></a>paramGetSnNumber</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_param.o(i.paramGetSnNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = paramGetSnNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSNInstruction
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doParamInstruction
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdZTSNParse
</UL>

<P><STRONG><a name="[266]"></a>paramGetStaticTime</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_param.o(i.paramGetStaticTime))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[264]"></a>paramGetStep</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_param.o(i.paramGetStep))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[1e1]"></a>paramGetUPSServer</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_param.o(i.paramGetUPSServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = paramGetUPSServer
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUPSInstruction
</UL>

<P><STRONG><a name="[265]"></a>paramGetVibrange</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_param.o(i.paramGetVibrange))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[242]"></a>paramInit</STRONG> (Thumb, 580 bytes, Stack size 32 bytes, app_param.o(i.paramInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = paramInit &rArr; paramDefaultInit &rArr; paramSaveServer &rArr; eepromWriteWord &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveVibrange
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveStaticTime
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveSmsreply
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveServer
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveHeartbeatInterval
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveGPSUploadInterval
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveCodeVersion
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAutoParam
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnName
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsUser
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsServer
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsPswd
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsPort
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetVibrange
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetStep
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetStaticTime
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetSnNumber
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetServer
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetMode2cnt
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetCodeVersion
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetBleMac
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetAutoParam
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetApnUser
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetApnPswd
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetApnName
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetAgpsUser
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetAgpsServer
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetAgpsPswd
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetAgpsPort
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramGetAdcCal
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteTwoBytes
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myAppConfig
</UL>

<P><STRONG><a name="[197]"></a>paramSaveACCCTLGNSS</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_param.o(i.paramSaveACCCTLGNSS))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveACCCTLGNSS &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doACCCTLGNSSInstrucion
</UL>

<P><STRONG><a name="[13f]"></a>paramSaveAdcCal</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_param.o(i.paramSaveAdcCal))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveAdcCal &rArr; eepromWriteWord &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteWord
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcAdccalParase
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
</UL>

<P><STRONG><a name="[1d2]"></a>paramSaveAgpsPort</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_param.o(i.paramSaveAgpsPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveAgpsPort &rArr; eepromWriteTwoBytes &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteTwoBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetAgpsInstruction
</UL>

<P><STRONG><a name="[1d4]"></a>paramSaveAgpsPswd</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_param.o(i.paramSaveAgpsPswd))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = paramSaveAgpsPswd &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetAgpsInstruction
</UL>

<P><STRONG><a name="[1d1]"></a>paramSaveAgpsServer</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_param.o(i.paramSaveAgpsServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = paramSaveAgpsServer &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetAgpsInstruction
</UL>

<P><STRONG><a name="[1d3]"></a>paramSaveAgpsUser</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_param.o(i.paramSaveAgpsUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = paramSaveAgpsUser &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetAgpsInstruction
</UL>

<P><STRONG><a name="[1bd]"></a>paramSaveAlarmTime</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_param.o(i.paramSaveAlarmTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = paramSaveAlarmTime &rArr; eepromWriteTwoBytes &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteTwoBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
</UL>

<P><STRONG><a name="[19c]"></a>paramSaveApnName</STRONG> (Thumb, 60 bytes, Stack size 64 bytes, app_param.o(i.paramSaveApnName))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = paramSaveApnName &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAPNInstruction
</UL>

<P><STRONG><a name="[19b]"></a>paramSaveApnPswd</STRONG> (Thumb, 60 bytes, Stack size 64 bytes, app_param.o(i.paramSaveApnPswd))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = paramSaveApnPswd &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAPNInstruction
</UL>

<P><STRONG><a name="[19a]"></a>paramSaveApnUser</STRONG> (Thumb, 60 bytes, Stack size 64 bytes, app_param.o(i.paramSaveApnUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = paramSaveApnUser &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAPNInstruction
</UL>

<P><STRONG><a name="[1a5]"></a>paramSaveAutoAnswer</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_param.o(i.paramSaveAutoAnswer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveAutoAnswer &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAnswerInstrucion
</UL>

<P><STRONG><a name="[259]"></a>paramSaveAutoParam</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_param.o(i.paramSaveAutoParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveAutoParam &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[1a8]"></a>paramSaveBF</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_param.o(i.paramSaveBF))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveBF &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doCFInstruction
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doBFInstruction
</UL>

<P><STRONG><a name="[1d6]"></a>paramSaveBleMac</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, app_param.o(i.paramSaveBleMac))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = paramSaveBleMac &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetblemacInstrucion
</UL>

<P><STRONG><a name="[144]"></a>paramSaveCM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_param.o(i.paramSaveCM))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveCM &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcCMParse
</UL>

<P><STRONG><a name="[25e]"></a>paramSaveCodeVersion</STRONG> (Thumb, 38 bytes, Stack size 48 bytes, app_param.o(i.paramSaveCodeVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = paramSaveCodeVersion &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[1b0]"></a>paramSaveFence</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_param.o(i.paramSaveFence))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveFence &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFenceInstrucion
</UL>

<P><STRONG><a name="[1c2]"></a>paramSaveGPSUploadInterval</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_param.o(i.paramSaveGPSUploadInterval))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveGPSUploadInterval &rArr; eepromWriteTwoBytes &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteTwoBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
</UL>

<P><STRONG><a name="[db]"></a>paramSaveHardFault</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_param.o(i.paramSaveHardFault))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveHardFault &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[1b2]"></a>paramSaveHeartbeatInterval</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_param.o(i.paramSaveHeartbeatInterval))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveHeartbeatInterval &rArr; eepromWriteTwoBytes &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteTwoBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doHbtInstruction
</UL>

<P><STRONG><a name="[1c3]"></a>paramSaveInterval</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_param.o(i.paramSaveInterval))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveInterval &rArr; eepromWriteTwoBytes &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteTwoBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
</UL>

<P><STRONG><a name="[1b7]"></a>paramSaveLedCtl</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_param.o(i.paramSaveLedCtl))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveLedCtl &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLEDInstruction
</UL>

<P><STRONG><a name="[1a3]"></a>paramSaveLightAlarmMode</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_param.o(i.paramSaveLightAlarmMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveLightAlarmMode &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAlarmModeInstrucion
</UL>

<P><STRONG><a name="[1b9]"></a>paramSaveLoww</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_param.o(i.paramSaveLoww))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveLoww &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLOWWInstruction
</UL>

<P><STRONG><a name="[81]"></a>paramSaveMallocFault</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_param.o(i.paramSaveMallocFault))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveMallocFault &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNodeCmd
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
</UL>

<P><STRONG><a name="[1bf]"></a>paramSaveMode</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_param.o(i.paramSaveMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveMode &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
</UL>

<P><STRONG><a name="[1be]"></a>paramSaveMode1GapDay</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_param.o(i.paramSaveMode1GapDay))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveMode1GapDay &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
</UL>

<P><STRONG><a name="[1ac]"></a>paramSaveMode1Timer</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_param.o(i.paramSaveMode1Timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveMode1Timer &rArr; eepromWriteTwoBytes &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteTwoBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStart
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doDebugInstrucion
</UL>

<P><STRONG><a name="[1ab]"></a>paramSaveMode2cnt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_param.o(i.paramSaveMode2cnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveMode2cnt &rArr; eepromWriteTwoBytes &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteTwoBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runTimeCount
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doResetInstruction
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doDebugInstrucion
</UL>

<P><STRONG><a name="[1c4]"></a>paramSaveNoNetWakeUpMinutes</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_param.o(i.paramSaveNoNetWakeUpMinutes))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveNoNetWakeUpMinutes &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
</UL>

<P><STRONG><a name="[1ca]"></a>paramSavePdop</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_param.o(i.paramSavePdop))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSavePdop &rArr; eepromWriteTwoBytes &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteTwoBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPdopInstrucion
</UL>

<P><STRONG><a name="[1c6]"></a>paramSavePoitype</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_param.o(i.paramSavePoitype))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSavePoitype &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPOITYPEInstruction
</UL>

<P><STRONG><a name="[1cf]"></a>paramSaveServer</STRONG> (Thumb, 74 bytes, Stack size 72 bytes, app_param.o(i.paramSaveServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = paramSaveServer &rArr; eepromWriteWord &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteWord
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doServerInstruction
</UL>

<P><STRONG><a name="[1d8]"></a>paramSaveSmsreply</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_param.o(i.paramSaveSmsreply))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveSmsreply &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSmsreplyInstrucion
</UL>

<P><STRONG><a name="[154]"></a>paramSaveSnNumber</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_param.o(i.paramSaveSnNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = paramSaveSnNumber &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSNInstruction
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdZTSNParse
</UL>

<P><STRONG><a name="[1da]"></a>paramSaveStaticTime</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_param.o(i.paramSaveStaticTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveStaticTime &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStaticTimeInstrucion
</UL>

<P><STRONG><a name="[258]"></a>paramSaveStep</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_param.o(i.paramSaveStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveStep &rArr; eepromWriteTwoBytes &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteTwoBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSaveStep
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portClearStep
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
</UL>

<P><STRONG><a name="[1df]"></a>paramSaveTurnalg</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_param.o(i.paramSaveTurnalg))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveTurnalg &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doTurnAlgInstrucion
</UL>

<P><STRONG><a name="[1e3]"></a>paramSaveUPSServer</STRONG> (Thumb, 70 bytes, Stack size 72 bytes, app_param.o(i.paramSaveUPSServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = paramSaveUPSServer &rArr; eepromWriteTwoBytes &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteTwoBytes
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUPSInstruction
</UL>

<P><STRONG><a name="[1e6]"></a>paramSaveUTC</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_param.o(i.paramSaveUTC))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveUTC &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUTCInstruction
</UL>

<P><STRONG><a name="[1e2]"></a>paramSaveUpdateStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_param.o(i.paramSaveUpdateStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveUpdateStatus &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUPSInstruction
</UL>

<P><STRONG><a name="[1e9]"></a>paramSaveVibrange</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_param.o(i.paramSaveVibrange))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = paramSaveVibrange &rArr; eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eepromWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVibrangeInstrucion
</UL>

<P><STRONG><a name="[257]"></a>parseGPS</STRONG> (Thumb, 268 bytes, Stack size 504 bytes, app_nmea.o(i.parseGPS))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016<LI>Call Chain = parseGPS &rArr; parse_RMC &rArr; showgpsinfo &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strstr
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCharIndex
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_RMC
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_GSV
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_GSA
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_GGA
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charstrToHexValue
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmeaParse
</UL>

<P><STRONG><a name="[269]"></a>parse_GGA</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_nmea.o(i.parse_GGA))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = parse_GGA &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseGPS
</UL>

<P><STRONG><a name="[268]"></a>parse_GSA</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, app_nmea.o(i.parse_GSA))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = parse_GSA &rArr; atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseGPS
</UL>

<P><STRONG><a name="[26a]"></a>parse_GSV</STRONG> (Thumb, 426 bytes, Stack size 72 bytes, app_nmea.o(i.parse_GSV))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = parse_GSV &rArr; atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strpach
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseGPS
</UL>

<P><STRONG><a name="[267]"></a>parse_RMC</STRONG> (Thumb, 326 bytes, Stack size 64 bytes, app_nmea.o(i.parse_RMC))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = parse_RMC &rArr; showgpsinfo &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showgpsinfo
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;longitude_to_double
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;latitude_to_double
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addNewGPSInfo
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atof
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parseGPS
</UL>

<P><STRONG><a name="[30]"></a>playAudio</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, app_net.o(i.playAudio))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = playAudio &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> app_net.o(i.n58AudplayParser)
<LI> app_instructioncmd.o(i.doAudioInstrucion)
</UL>
<P><STRONG><a name="[18e]"></a>portClearStep</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, app_port.o(i.portClearStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = portClearStep &rArr; clearStep &rArr; mir3da_register_write &rArr; iicWriteData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveStep
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearStep
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disPlaySystemTime
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doDebugInstrucion
</UL>

<P><STRONG><a name="[13d]"></a>portGetAdc</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_port.o(i.portGetAdc))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = portGetAdc &rArr; HAL_ADC_Start &rArr; ADC_Enable &rArr; ADC_DelayMicroSecond &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Stop
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_PollForConversion
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_GetValue
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_GetState
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcAdccalParase
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatVoltage
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
</UL>

<P><STRONG><a name="[26e]"></a>portGetDateTimeOfSeconds</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, app_port.o(i.portGetDateTimeOfSeconds))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = portGetDateTimeOfSeconds &rArr; portGetSystemDateTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetSystemDateTime
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portLdrInt
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tapInt
</UL>

<P><STRONG><a name="[175]"></a>portGetSystemDateTime</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, app_port.o(i.portGetSystemDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = portGetSystemDateTime &rArr; HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetSystemDateTime
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetNextWakeUpTime
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetNextAlarmTime
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetDateTimeOfSeconds
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disPlaySystemTime
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol19
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dorequestSend123
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF3
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recStart
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doDebugInstrucion
</UL>

<P><STRONG><a name="[137]"></a>portGsensorCfg</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, app_port.o(i.portGsensorCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = portGsensorCfg &rArr; mir3da_init &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRange
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startStep
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_set_enable
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_open_interrupt
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorSdaSclCtl
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugParase
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemShutDown
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorIntervalCheck
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;repairGsensor
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStop
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStart
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
</UL>

<P><STRONG><a name="[9a]"></a>portGsensorInt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_port.o(i.portGsensorInt))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[26f]"></a>portGsensorSdaSclCtl</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, app_port.o(i.portGsensorSdaSclCtl))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = portGsensorSdaSclCtl &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
</UL>

<P><STRONG><a name="[99]"></a>portLdrInt</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, app_port.o(i.portLdrInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = portLdrInt &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemModeRunStart
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmRequestSet
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetDateTimeOfSeconds
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[243]"></a>portLowPowerCfg</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_port.o(i.portLowPowerCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = portLowPowerCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableUltraLowPower
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableFastWakeUp
</UL>
<BR>[Called By]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myAppConfig
</UL>

<P><STRONG><a name="[253]"></a>portModuleCfg</STRONG> (Thumb, 138 bytes, Stack size 48 bytes, app_port.o(i.portModuleCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = portModuleCfg &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netModuleStartup
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netModuleShutdown
</UL>

<P><STRONG><a name="[244]"></a>portPollUart</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_port.o(i.portPollUart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = portPollUart
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halUartRecvPushOut
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myAppRun
</UL>

<P><STRONG><a name="[98]"></a>portRingSignal</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, app_port.o(i.portRingSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = portRingSignal &rArr; startTimer &rArr; Create_Timer &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopTimer
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[274]"></a>portSaveStep</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_port.o(i.portSaveStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveStep
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUpdateStep
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSystemReset
</UL>

<P><STRONG><a name="[ad]"></a>portSetNextAlarmTime</STRONG> (Thumb, 306 bytes, Stack size 112 bytes, app_port.o(i.portSetNextAlarmTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = portSetNextAlarmTime &rArr; updateAlarmA &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetAlarm
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetSystemDateTime
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateAlarmA
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_AlarmAEventCallback
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLocalRTCTime
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStart
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
</UL>

<P><STRONG><a name="[af]"></a>portSetNextWakeUpTime</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, app_port.o(i.portSetNextWakeUpTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = portSetNextWakeUpTime &rArr; updateAlarmA &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetSystemDateTime
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateAlarmA
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_AlarmAEventCallback
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLocalRTCTime
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStart
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
</UL>

<P><STRONG><a name="[276]"></a>portSetSystemDateTime</STRONG> (Thumb, 250 bytes, Stack size 248 bytes, app_port.o(i.portSetSystemDateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = portSetSystemDateTime &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetSystemDateTime
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLocalRTCTime
</UL>

<P><STRONG><a name="[33]"></a>portSystemReset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_port.o(i.portSystemReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SystemReset
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSaveStep
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNodeCmd
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugParase
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 2]<UL><LI> app_instructioncmd.o(i.doResetInstruction)
<LI> app_instructioncmd.o(i.doUPSInstruction)
</UL>
<P><STRONG><a name="[241]"></a>portUartCfg</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, app_port.o(i.portUartCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = portUartCfg &rArr; MX_USART2_UART_Init &rArr; HAL_UART_Init &rArr; UART_SetConfig &rArr; HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LPUART1_UART_Init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_DMA
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DeInit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestTask
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myAppConfig
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netModuleStartup
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netModuleShutdown
</UL>

<P><STRONG><a name="[de]"></a>portUartSend</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_port.o(i.portUartSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessageWL
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outPutNodeCmd
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doDebugInstrucion
</UL>

<P><STRONG><a name="[182]"></a>portUpdateStep</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_port.o(i.portUpdateStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getStep
</UL>
<BR>[Called By]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSaveStep
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_13
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_12
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStatusInstruction
</UL>

<P><STRONG><a name="[278]"></a>portWdtFeed</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, app_port.o(i.portWdtFeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = portWdtFeed
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Refresh
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtProcess
</UL>

<P><STRONG><a name="[16a]"></a>pow</STRONG> (Thumb, 2548 bytes, Stack size 128 bytes, pow.o(i.pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charstrToHexValue
</UL>

<P><STRONG><a name="[24e]"></a>protocolReceivePush</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, app_serverprotocol.o(i.protocolReceivePush))
<BR><BR>[Stack]<UL><LI>Max Depth = 2276<LI>Call Chain = protocolReceivePush &rArr; protocolRxParser &rArr; instructionParser &rArr; doinstruction &rArr; doDebugInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRxParser
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58TCPRecvParser
</UL>

<P><STRONG><a name="[256]"></a>protocolRunFsm</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, app_serverprotocol.o(i.protocolRunFsm))
<BR><BR>[Stack]<UL><LI>Max Depth = 1172<LI>Call Chain = protocolRunFsm &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58_ChangeInvokeStatus
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsReadRestoreReset
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uploadGpsRestoreData
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csqRequest
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
</UL>

<P><STRONG><a name="[27c]"></a>protocolRxParser</STRONG> (Thumb, 248 bytes, Stack size 144 bytes, app_serverprotocol.o(i.protocolRxParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 2244<LI>Call Chain = protocolRxParser &rArr; instructionParser &rArr; doinstruction &rArr; doDebugInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateLocalRTCTime
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protoclparser52
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protoclparser51
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemLedStatus
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;instructionParser
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearHbtTimer
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolReceivePush
</UL>

<P><STRONG><a name="[34]"></a>reConnectServer</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, app_net.o(i.reConnectServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = reConnectServer &rArr; N58_ChangeInvokeStatus &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58_ChangeInvokeStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_instructioncmd.o(i.doServerInstruction)
</UL>
<P><STRONG><a name="[1ee]"></a>reCover123InstructionId</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_serverprotocol.o(i.reCover123InstructionId))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dorequestSend123
</UL>

<P><STRONG><a name="[206]"></a>readInterruptConfig</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_mir3da.o(i.readInterruptConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = readInterruptConfig &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorIntervalCheck
</UL>

<P><STRONG><a name="[14e]"></a>read_gsensor_id</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, app_mir3da.o(i.read_gsensor_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = read_gsensor_id &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_register_read
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryTestInstruction
</UL>

<P><STRONG><a name="[24a]"></a>recGetRecStruct</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_rec.o(i.recGetRecStruct))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FswrParser
</UL>

<P><STRONG><a name="[15a]"></a>recIsRun</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_rec.o(i.recIsRun))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoSleepTask
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FswrParser
</UL>

<P><STRONG><a name="[249]"></a>recNoFileToread</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_rec.o(i.recNoFileToread))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = recNoFileToread &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FSLISTParser
</UL>

<P><STRONG><a name="[24b]"></a>recReadFileOk</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_rec.o(i.recReadFileOk))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FswrParser
</UL>

<P><STRONG><a name="[27f]"></a>recRecordUploadTask</STRONG> (Thumb, 150 bytes, Stack size 112 bytes, app_rec.o(i.recRecordUploadTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = recRecordUploadTask &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isProtocolReday
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskRunInOneSecond
</UL>

<P><STRONG><a name="[1b5]"></a>recStart</STRONG> (Thumb, 104 bytes, Stack size 104 bytes, app_rec.o(i.recStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = recStart &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetSystemDateTime
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doJtInstruction
</UL>

<P><STRONG><a name="[280]"></a>recStop</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, app_rec.o(i.recStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = recStop &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recStopAndUpload
</UL>

<P><STRONG><a name="[31]"></a>recStopAndUpload</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_rec.o(i.recStopAndUpload))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = recStopAndUpload &rArr; recStop &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recStop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_instructioncmd.o(i.doJtInstruction)
</UL>
<P><STRONG><a name="[247]"></a>recUpdateFileName</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_rec.o(i.recUpdateFileName))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = recUpdateFileName
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FSLISTParser
</UL>

<P><STRONG><a name="[248]"></a>recUpdateFileSize</STRONG> (Thumb, 64 bytes, Stack size 56 bytes, app_rec.o(i.recUpdateFileSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = recUpdateFileSize &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FSLISTParser
</UL>

<P><STRONG><a name="[15b]"></a>resIsCycleRuning</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_rec.o(i.resIsCycleRuning))
<BR><BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoSleepTask
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doJtInstruction
</UL>

<P><STRONG><a name="[193]"></a>save123InstructionId</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, app_serverprotocol.o(i.save123InstructionId))
<BR><BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do123Instruction
</UL>

<P><STRONG><a name="[17b]"></a>sendDataToServer</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, app_net.o(i.sendDataToServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = sendDataToServer &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNodeCmd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF3
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol62
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58FswrParser
</UL>

<P><STRONG><a name="[281]"></a>sendMessage</STRONG> (Thumb, 60 bytes, Stack size 72 bytes, app_net.o(i.sendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = sendMessage &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNodeCmd
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
</UL>

<P><STRONG><a name="[198]"></a>sendMessageWithDifMode</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, app_instructioncmd.o(i.sendMessageWithDifMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 1164<LI>Call Chain = sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessage
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBleSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dorequestSend123
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVolInstrucion
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVibrangeInstrucion
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVersionInstruction
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUTCInstruction
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUPSInstruction
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doTurnAlgInstrucion
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doTTSInstruction
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStatusInstruction
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStaticTimeInstrucion
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSmsreplyInstrucion
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetblemacInstrucion
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetAgpsInstruction
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doServerInstruction
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doResetInstruction
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPdopInstrucion
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doParamInstruction
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPOITYPEInstruction
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLOWWInstruction
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLEDInstruction
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doJtInstruction
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doHbtInstruction
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFenceInstrucion
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryTestInstruction
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryInstrucion
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doDebugInstrucion
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doCFInstruction
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doBFInstruction
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAudioInstrucion
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAnswerInstrucion
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAlarmModeInstrucion
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAPNInstruction
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doACCCTLGNSSInstrucion
</UL>

<P><STRONG><a name="[ec]"></a>sendModuleCmd</STRONG> (Thumb, 148 bytes, Stack size 280 bytes, app_net.o(i.sendModuleCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNodeCmd
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58_CreateSocket
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmUploadRequest
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFMPCnmeaParase
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRestoreWriteData
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsReadFromModuleAndSendtoServe
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protoclparser52
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protoclparser51
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recRecordUploadTask
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lbsUploadRequestTask
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestTask
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAgps
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStop
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsStartBD
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recUpdateFileSize
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setModuleVol
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessage
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDataToServer
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;playAudio
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openModuleGPS
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58setXGAUTH
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58setAPN
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58CMTIParser
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58ATA
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode4Callback
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;deleteMessage
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;csqRequest
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;closeModuleGPS
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58enterNormalMode
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58enterFlightMode
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recStop
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recStart
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appBleSendData
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doTTSInstruction
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doJtInstruction
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdIMEIParse
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcIMSIParse
</UL>

<P><STRONG><a name="[121]"></a>sendProtocolToServer</STRONG> (Thumb, 352 bytes, Stack size 624 bytes, app_serverprotocol.o(i.sendProtocolToServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 1148<LI>Call Chain = sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeByteArrayToHexString
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRestoreWriteData
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_8A
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_21
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_13
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_12
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_01
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF1
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol19
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol16
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolTail
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolSerial
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolHead
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol53
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isProtocolReday
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendDataToServer
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmUploadRequest
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protoclparser52
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protoclparser51
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUploadPointToServer
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lbsUploadRequestTask
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorTapTask
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUplodOnePointTask
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRunFsm
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58WIFISCANParser
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheGPSCornerPoint
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
</UL>

<P><STRONG><a name="[1eb]"></a>setModuleVol</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, app_net.o(i.setModuleVol))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = setModuleVol &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVolInstrucion
</UL>

<P><STRONG><a name="[26b]"></a>showgpsinfo</STRONG> (Thumb, 320 bytes, Stack size 344 bytes, app_nmea.o(i.showgpsinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = showgpsinfo &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_RMC
</UL>

<P><STRONG><a name="[162]"></a>sin</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheDistanceBetweenTwoPonits
</UL>

<P><STRONG><a name="[12d]"></a>sqrt</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateTheDistanceBetweenTwoPonits
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[270]"></a>startStep</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_mir3da.o(i.startStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = startStep &rArr; mir3da_register_write &rArr; iicWriteData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_register_write
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
</UL>

<P><STRONG><a name="[147]"></a>startTimer</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, app_kernal.o(i.startTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = startTimer &rArr; Create_Timer &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSystemReset
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMallocFault
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Timer
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portRingSignal
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createSystemTask
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorIntervalCheck
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestOpen
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRunFsm
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58AudplayParser
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58AtaParser
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleReset
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendMessageWithDifMode
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUPSInstruction
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doServerInstruction
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doResetInstruction
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doJtInstruction
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAudioInstrucion
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAPNInstruction
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdIMEIParse
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcIMSIParse
</UL>

<P><STRONG><a name="[16c]"></a>stopTimer</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, app_kernal.o(i.stopTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = stopTimer &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portRingSignal
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearHbtTimer
</UL>

<P><STRONG><a name="[132]"></a>stringToItem</STRONG> (Thumb, 236 bytes, Stack size 152 bytes, app_sys.o(i.stringToItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = stringToItem &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugParase
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;instructionParser
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdFmpcAllParse
</UL>

<P><STRONG><a name="[ae]"></a>systemModeRunStart</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_task.o(i.systemModeRunStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = systemModeRunStart &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portLdrInt
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_AlarmAEventCallback
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtProcess
</UL>

<P><STRONG><a name="[282]"></a>systemModeTask</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, app_task.o(i.systemModeTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = systemModeTask &rArr; modeRun &rArr; gpsUploadPointToServer &rArr; calculateTheGPSCornerPoint &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestSet
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStop
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStart
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeRun
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskRunInOneSecond
</UL>

<P><STRONG><a name="[283]"></a>systemRequestClear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_task.o(i.systemRequestClear))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestTask
</UL>

<P><STRONG><a name="[aa]"></a>systemRequestSet</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_task.o(i.systemRequestSet))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTCEx_WakeUpTimerEventCallback
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tapInt
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtProcess
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uploadRequestInMode4
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemShutDown
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemModeTask
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoSleepTask
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStop
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStart
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netExitStopMode
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netEnterStopMode
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doDebugInstrucion
</UL>

<P><STRONG><a name="[245]"></a>systemRequestTask</STRONG> (Thumb, 198 bytes, Stack size 8 bytes, app_task.o(i.systemRequestTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = systemRequestTask &rArr; systemShutDown &rArr; gpsRequestClose &rArr; closeModuleGPS &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartCfg
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SuspendTick
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ResumeTick
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWR_EnterSTOPMode
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdtProcess
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uploadRequestInMode4
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemShutDown
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestClear
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hearbeatRequest
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitNetCtl
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netModuleStartup
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netModuleShutdown
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myAppRun
</UL>

<P><STRONG><a name="[287]"></a>systemShutDown</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, app_task.o(i.systemShutDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = systemShutDown &rArr; gpsRequestClose &rArr; closeModuleGPS &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;terminalAccoff
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestSet
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestGet
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestClear
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netModuleShutdown
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestClose
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemLedStatus
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestTask
</UL>

<P><STRONG><a name="[135]"></a>systemTaskResume</STRONG> (Thumb, 52 bytes, Stack size 56 bytes, app_kernal.o(i.systemTaskResume))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = systemTaskResume &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugParase
</UL>

<P><STRONG><a name="[134]"></a>systemTaskSuspend</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, app_kernal.o(i.systemTaskSuspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = systemTaskSuspend &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugParase
</UL>

<P><STRONG><a name="[9b]"></a>tapInt</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, app_user.o(i.tapInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = tapInt &rArr; gpsRequestSet &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestSet
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmRequestSet
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetDateTimeOfSeconds
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestSet
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestGet
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[3b]"></a>taskRunInOneSecond</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, app_task.o(i.taskRunInOneSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412<LI>Call Chain = taskRunInOneSecond &rArr; gpsUplodOnePointTask &rArr; dorequestSend123 &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disPlaySystemTime
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;recRecordUploadTask
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifiUploadRequestTask
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemModeTask
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lbsUploadRequestTask
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorTapTask
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorIntervalCheck
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUplodOnePointTask
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestTask
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsOutputCheckTask
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delSmsOndDay
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoSleepTask
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;networkConnectProcess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_user.o(i.myAppConfig)
</UL>
<P><STRONG><a name="[1c0]"></a>terminalAccoff</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_sys.o(i.terminalAccoff))
<BR><BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemShutDown
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorTapTask
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
</UL>

<P><STRONG><a name="[208]"></a>terminalAccon</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_sys.o(i.terminalAccon))
<BR><BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensorTapTask
</UL>

<P><STRONG><a name="[120]"></a>terminalAlarmSet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_sys.o(i.terminalAlarmSet))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmUploadRequest
</UL>

<P><STRONG><a name="[28d]"></a>terminalCharge</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_sys.o(i.terminalCharge))
<BR><BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
</UL>

<P><STRONG><a name="[11b]"></a>terminalGPSFixed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_sys.o(i.terminalGPSFixed))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addNewGPSInfo
</UL>

<P><STRONG><a name="[118]"></a>terminalGPSUnFixed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_sys.o(i.terminalGPSUnFixed))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addNewGPSInfo
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsClearCurrentGPSInfo
</UL>

<P><STRONG><a name="[28e]"></a>terminalunCharge</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_sys.o(i.terminalunCharge))
<BR><BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
</UL>

<P><STRONG><a name="[11c]"></a>updateLocalRTCTime</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, app_gps.o(i.updateLocalRTCTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = updateLocalRTCTime &rArr; portSetNextAlarmTime &rArr; updateAlarmA &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeUTCTimeToLocalTime
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetSystemDateTime
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetNextWakeUpTime
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetNextAlarmTime
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addNewGPSInfo
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRxParser
</UL>

<P><STRONG><a name="[1e5]"></a>updateRTCtimeRequest</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_sys.o(i.updateRTCtimeRequest))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestTask
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStart
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUTCInstruction
</UL>

<P><STRONG><a name="[136]"></a>updateRange</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_mir3da.o(i.updateRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = updateRange &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mir3da_register_write
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugParase
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVibrangeInstrucion
</UL>

<P><STRONG><a name="[ea]"></a>updateSystemLedStatus</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, app_task.o(i.updateSystemLedStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = updateSystemLedStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledSetPeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58_ChangeInvokeStatus
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addNewGPSInfo
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRxParser
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemShutDown
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsOutputCheckTask
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;netModuleShutdown
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStop
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStart
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestClose
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;n58MygpsstateParser
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleReset
</UL>

<P><STRONG><a name="[194]"></a>updateSystemStartTime</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_sys.o(i.updateSystemStartTime))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do123Instruction
</UL>

<P><STRONG><a name="[27e]"></a>uploadGpsRestoreData</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, app_serverprotocol.o(i.uploadGpsRestoreData))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = uploadGpsRestoreData &rArr; gpsReadFromModuleAndSendtoServe &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsReadFromModuleAndSendtoServe
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRunFsm
</UL>

<P><STRONG><a name="[289]"></a>uploadRequestInMode4</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, app_task.o(i.uploadRequestInMode4))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = uploadRequestInMode4 &rArr; gpsRequestSet &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestSet
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestSet
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isModulePowerOn
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestTask
</UL>

<P><STRONG><a name="[21b]"></a>voltageCheckTask</STRONG> (Thumb, 542 bytes, Stack size 32 bytes, app_task.o(i.voltageCheckTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = voltageCheckTask &rArr; getBatVoltage &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;terminalunCharge
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;terminalCharge
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTerminalChargeState
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestSet
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarmRequestSet
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMode2cnt
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMode1Timer
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isProtocolReday
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatVoltage
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeRun
</UL>

<P><STRONG><a name="[288]"></a>wdtProcess</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, app_task.o(i.wdtProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = wdtProcess &rArr; getBatVoltage &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestSet
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemModeRunStart
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portWdtFeed
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getBatVoltage
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestTask
</UL>

<P><STRONG><a name="[28a]"></a>wifiUploadRequestTask</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_task.o(i.wifiUploadRequestTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wifiUploadRequestTask &rArr; isProtocolReday
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isProtocolReday
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskRunInOneSecond
</UL>

<P><STRONG><a name="[290]"></a>ztvm_encrypt_des</STRONG> (Thumb, 86 bytes, Stack size 120 bytes, app_sn.o(i.ztvm_encrypt_des))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = ztvm_encrypt_des &rArr; encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setkey
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expand
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encrypt
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compress
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ztvm_encrypt_untrides
</UL>

<P><STRONG><a name="[295]"></a>ztvm_encrypt_undes</STRONG> (Thumb, 88 bytes, Stack size 112 bytes, app_sn.o(i.ztvm_encrypt_undes))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = ztvm_encrypt_undes &rArr; encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setkey
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expand
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;encrypt
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compress
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ztvm_encrypt_untrides
</UL>

<P><STRONG><a name="[18b]"></a>ztvm_encrypt_untrides</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, app_sn.o(i.ztvm_encrypt_untrides))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ztvm_encrypt_untrides &rArr; ztvm_encrypt_des &rArr; encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ztvm_encrypt_undes
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ztvm_encrypt_des
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decryptSN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[82]"></a>Create_Timer</STRONG> (Thumb, 150 bytes, Stack size 80 bytes, app_kernal.o(i.Create_Timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Create_Timer &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
</UL>

<P><STRONG><a name="[f1]"></a>Soft_IIC_Input</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, app_port.o(i.Soft_IIC_Input))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Soft_IIC_Input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Wait_ACK
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Recv_Byte
</UL>

<P><STRONG><a name="[ef]"></a>Soft_IIC_Output</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, app_port.o(i.Soft_IIC_Output))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Write_Byte
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Wait_ACK
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Stop
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_Start
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_NACK
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Soft_IIC_ACK
</UL>

<P><STRONG><a name="[3f]"></a>clearRingWakeUp</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_port.o(i.clearRingWakeUp))
<BR>[Address Reference Count : 1]<UL><LI> app_port.o(i.portRingSignal)
</UL>
<P><STRONG><a name="[20a]"></a>halGetInDma</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, app_port.o(i.halGetInDma))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = halGetInDma &rArr; HAL_UART_Receive_DMA &rArr; UART_Start_Receive_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Receive_DMA
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DMAStop
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halRecvInIdle
</UL>

<P><STRONG><a name="[273]"></a>halUartRecvPushOut</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app_port.o(i.halUartRecvPushOut))
<BR><BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portPollUart
</UL>

<P><STRONG><a name="[275]"></a>updateAlarmA</STRONG> (Thumb, 92 bytes, Stack size 160 bytes, app_port.o(i.updateAlarmA))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = updateAlarmA &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetAlarm_IT
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_DeactivateAlarm
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetNextWakeUpTime
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetNextAlarmTime
</UL>

<P><STRONG><a name="[166]"></a>asciiToHex</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_sys.o(i.asciiToHex))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeHexStringToByteArray_10in
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeHexStringToByteArray
</UL>

<P><STRONG><a name="[1ef]"></a>eepromWriteByte</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_param.o(i.eepromWriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = eepromWriteByte &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_DATAEEPROM_Unlock
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_DATAEEPROM_Program
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_DATAEEPROM_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMallocFault
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveVibrange
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveUpdateStatus
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveUTC
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveUPSServer
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveTurnalg
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveStaticTime
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveSnNumber
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveSmsreply
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveServer
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSavePoitype
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveNoNetWakeUpMinutes
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMode1GapDay
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMode
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveLoww
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveLightAlarmMode
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveLedCtl
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveHardFault
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveFence
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveCodeVersion
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveCM
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveBleMac
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveBF
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAutoParam
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAutoAnswer
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnUser
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnPswd
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveApnName
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsUser
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsServer
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsPswd
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveACCCTLGNSS
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[1f2]"></a>eepromWriteTwoBytes</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_param.o(i.eepromWriteTwoBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = eepromWriteTwoBytes &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_DATAEEPROM_Unlock
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_DATAEEPROM_Program
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_DATAEEPROM_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveStep
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveUPSServer
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSavePdop
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMode2cnt
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMode1Timer
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveInterval
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveHeartbeatInterval
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveGPSUploadInterval
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAlarmTime
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAgpsPort
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDefaultInit
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramInit
</UL>

<P><STRONG><a name="[1f3]"></a>eepromWriteWord</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, app_param.o(i.eepromWriteWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = eepromWriteWord &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_DATAEEPROM_Unlock
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_DATAEEPROM_Program
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASHEx_DATAEEPROM_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveServer
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAdcCal
</UL>

<P><STRONG><a name="[220]"></a>moduleInfoInit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_net.o(i.moduleInfoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = moduleInfoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleReset
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modulePowerOn
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modulePowerOff
</UL>

<P><STRONG><a name="[37]"></a>moduleResetProcessA</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, app_net.o(i.moduleResetProcessA))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = moduleResetProcessA &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_net.o(i.moduleReset)
</UL>
<P><STRONG><a name="[23a]"></a>n58TcpsendParase</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, app_net.o(i.n58TcpsendParase))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = n58TcpsendParase &rArr; N58_ChangeInvokeStatus &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strstr
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;N58_ChangeInvokeStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moduleResponParaser
</UL>

<P><STRONG><a name="[1cb]"></a>doPoitypeRequest</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, app_task.o(i.doPoitypeRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = doPoitypeRequest &rArr; gpsRequestSet &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestSet
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeStart
</UL>

<P><STRONG><a name="[212]"></a>gpsLedTask</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, app_task.o(i.gpsLedTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpsLedTask
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledRunTask
</UL>

<P><STRONG><a name="[1fb]"></a>gpsRequestClose</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, app_task.o(i.gpsRequestClose))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = gpsRequestClose &rArr; closeModuleGPS &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemLedStatus
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsClearCurrentGPSInfo
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;closeModuleGPS
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemShutDown
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestTask
</UL>

<P><STRONG><a name="[1fc]"></a>gpsRequestOpen</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, app_task.o(i.gpsRequestOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = gpsRequestOpen &rArr; setAgps &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTimer
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setAgps
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openModuleGPS
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestTask
</UL>

<P><STRONG><a name="[35]"></a>gpsStartBD</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_task.o(i.gpsStartBD))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = gpsStartBD &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(i.gpsRequestOpen)
</UL>
<P><STRONG><a name="[28b]"></a>ledSetPeriod</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_task.o(i.ledSetPeriod))
<BR><BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemLedStatus
</UL>

<P><STRONG><a name="[21a]"></a>modeRun</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, app_task.o(i.modeRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 1252<LI>Call Chain = modeRun &rArr; gpsUploadPointToServer &rArr; calculateTheGPSCornerPoint &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTerminalAccState
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsUploadPointToServer
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;voltageCheckTask
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;runTimeCount
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeShutDownQuickly
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemModeTask
</UL>

<P><STRONG><a name="[21c]"></a>modeShutDownQuickly</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, app_task.o(i.modeShutDownQuickly))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = modeShutDownQuickly &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getTerminalAccState
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isProtocolReday
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeRun
</UL>

<P><STRONG><a name="[21e]"></a>modeStart</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, app_task.o(i.modeStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = modeStart &rArr; portSetNextAlarmTime &rArr; updateAlarmA &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRTCtimeRequest
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestSet
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetNextWakeUpTime
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSetNextAlarmTime
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMode1Timer
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestSet
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPoitypeRequest
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemLedStatus
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemModeTask
</UL>

<P><STRONG><a name="[21f]"></a>modeStop</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, app_task.o(i.modeStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = modeStop &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestSet
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemLedStatus
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemModeTask
</UL>

<P><STRONG><a name="[252]"></a>netModuleShutdown</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, app_task.o(i.netModuleShutdown))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = netModuleShutdown &rArr; portModuleCfg &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartCfg
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portModuleCfg
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSystemLedStatus
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modulePowerOff
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestTask
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemShutDown
</UL>

<P><STRONG><a name="[254]"></a>netModuleStartup</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_task.o(i.netModuleStartup))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = netModuleStartup &rArr; portModuleCfg &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portUartCfg
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portModuleCfg
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modulePowerOn
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemRequestTask
</UL>

<P><STRONG><a name="[36]"></a>repairGsensor</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, app_task.o(i.repairGsensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = repairGsensor &rArr; portGsensorCfg &rArr; mir3da_init &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(i.gsensorIntervalCheck)
</UL>
<P><STRONG><a name="[21d]"></a>runTimeCount</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_task.o(i.runTimeCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = runTimeCount &rArr; paramSaveMode2cnt &rArr; eepromWriteTwoBytes &rArr; HAL_FLASHEx_DATAEEPROM_Program &rArr; FLASH_WaitForLastOperation &rArr; FLASH_SetErrorCode
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveMode2cnt
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeRun
</UL>

<P><STRONG><a name="[1fd]"></a>setAgps</STRONG> (Thumb, 66 bytes, Stack size 168 bytes, app_task.o(i.setAgps))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = setAgps &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRequestOpen
</UL>

<P><STRONG><a name="[213]"></a>signalLedTask</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, app_task.o(i.signalLedTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = signalLedTask
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ledRunTask
</UL>

<P><STRONG><a name="[176]"></a>createProtocol53</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, app_serverprotocol.o(i.createProtocol53))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = createProtocol53 &rArr; createProtocolTail &rArr; GetCrc16
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolTail
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolHead
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
</UL>

<P><STRONG><a name="[170]"></a>createProtocolHead</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_serverprotocol.o(i.createProtocolHead))
<BR><BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_8A
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_13
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_12
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_01
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF1
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol19
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol16
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol53
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRestoreDataSend
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF3
</UL>

<P><STRONG><a name="[178]"></a>createProtocolSerial</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_serverprotocol.o(i.createProtocolSerial))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF1
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRestoreDataSend
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF3
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol62
</UL>

<P><STRONG><a name="[173]"></a>createProtocolTail</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, app_serverprotocol.o(i.createProtocolTail))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = createProtocolTail &rArr; GetCrc16
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_8A
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_13
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_12
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_01
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF1
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol19
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol16
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol53
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpsRestoreDataSend
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocolF3
</UL>

<P><STRONG><a name="[179]"></a>createProtocolTail_7979</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, app_serverprotocol.o(i.createProtocolTail_7979))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = createProtocolTail_7979 &rArr; GetCrc16
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_21
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol62
</UL>

<P><STRONG><a name="[185]"></a>getBatteryLevel</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, app_serverprotocol.o(i.getBatteryLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = getBatteryLevel &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_13
</UL>

<P><STRONG><a name="[180]"></a>packIMEI</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, app_serverprotocol.o(i.packIMEI))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = packIMEI
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_01
</UL>

<P><STRONG><a name="[27a]"></a>protoclparser51</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, app_serverprotocol.o(i.protoclparser51))
<BR><BR>[Stack]<UL><LI>Max Depth = 1196<LI>Call Chain = protoclparser51 &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRxParser
</UL>

<P><STRONG><a name="[27b]"></a>protoclparser52</STRONG> (Thumb, 120 bytes, Stack size 120 bytes, app_serverprotocol.o(i.protoclparser52))
<BR><BR>[Stack]<UL><LI>Max Depth = 1268<LI>Call Chain = protoclparser52 &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNodeCmd
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendProtocolToServer
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;protocolRxParser
</UL>

<P><STRONG><a name="[172]"></a>protocolGPSpack</STRONG> (Thumb, 450 bytes, Stack size 88 bytes, app_serverprotocol.o(i.protocolGPSpack))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = protocolGPSpack &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;changeUTCTimeToLocalTime
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol_12
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;createProtocol16
</UL>

<P><STRONG><a name="[131]"></a>atCmdDebugParase</STRONG> (Thumb, 430 bytes, Stack size 504 bytes, app_atcmd.o(i.atCmdDebugParase))
<BR><BR>[Stack]<UL><LI>Max Depth = 760<LI>Call Chain = atCmdDebugParase &rArr; stringToItem &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stringToItem
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateRange
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGsensorCfg
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portSystemReset
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemTaskSuspend
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systemTaskResume
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdDebugLevelParser
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
</UL>

<P><STRONG><a name="[138]"></a>atCmdFMPCnmeaParase</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, app_atcmd.o(i.atCmdFMPCnmeaParase))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = atCmdFMPCnmeaParase &rArr; openModuleGPS &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strstr
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sendModuleCmd
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;openModuleGPS
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;closeModuleGPS
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
</UL>

<P><STRONG><a name="[13c]"></a>atCmdFmpcAdccalParase</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, app_atcmd.o(i.atCmdFmpcAdccalParase))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = atCmdFmpcAdccalParase &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;portGetAdc
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramSaveAdcCal
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
</UL>

<P><STRONG><a name="[2d]"></a>atCmdFmpcIMSIParseRespon</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, app_atcmd.o(i.atCmdFmpcIMSIParseRespon))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = atCmdFmpcIMSIParseRespon &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getModuleIMSI
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getModuleICCID
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_atcmd.o(i.atCmdFmpcIMSIParse)
</UL>
<P><STRONG><a name="[2e]"></a>atCmdIMEIParseRespon</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_atcmd.o(i.atCmdIMEIParseRespon))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = atCmdIMEIParseRespon &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogPrintf
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getModuleIMEI
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_atcmd.o(i.atCmdIMEIParse)
</UL>
<P><STRONG><a name="[1ec]"></a>doinstruction</STRONG> (Thumb, 512 bytes, Stack size 72 bytes, app_atcmd.o(i.doinstruction))
<BR><BR>[Stack]<UL><LI>Max Depth = 1580<LI>Call Chain = doinstruction &rArr; doDebugInstrucion &rArr; sendMessageWithDifMode &rArr; sendProtocolToServer &rArr; gpsRestoreWriteData &rArr; sendModuleCmd &rArr; CreateNodeCmd &rArr; portSystemReset &rArr; portSaveStep &rArr; portUpdateStep &rArr; getStep &rArr; mir3da_register_read &rArr; iicReadData &rArr; Soft_IIC_Write_Byte &rArr; Soft_IIC_Wait_ACK &rArr; Soft_IIC_Stop &rArr; Soft_IIC_Output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogMessage
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVolInstrucion
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVibrangeInstrucion
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doVersionInstruction
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUTCInstruction
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doUPSInstruction
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doTurnAlgInstrucion
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doTTSInstruction
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStatusInstruction
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doStaticTimeInstrucion
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSmsreplyInstrucion
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetblemacInstrucion
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSetAgpsInstruction
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doServerInstruction
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doSNInstruction
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doResetInstruction
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPdopInstrucion
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doParamInstruction
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doPOITYPEInstruction
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doModeInstruction
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLOWWInstruction
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doLEDInstruction
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doJtInstruction
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doHbtInstruction
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFenceInstrucion
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryTestInstruction
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doFactoryInstrucion
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doDebugInstrucion
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doCFInstruction
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doBFInstruction
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAudioInstrucion
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAnswerInstrucion
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAlarmModeInstrucion
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAdccalInstrucion
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAPNInstruction
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doACCCTLGNSSInstrucion
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do123Instruction
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;instructionParser
</UL>

<P><STRONG><a name="[14c]"></a>mycmdPatch</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app_atcmd.o(i.mycmdPatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mycmdPatch
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atCmdParserFunction
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;instructionParser
</UL>

<P><STRONG><a name="[294]"></a>compress</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, app_sn.o(i.compress))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = compress
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ztvm_encrypt_undes
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ztvm_encrypt_des
</UL>

<P><STRONG><a name="[293]"></a>encrypt</STRONG> (Thumb, 304 bytes, Stack size 356 bytes, app_sn.o(i.encrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = encrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ztvm_encrypt_undes
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ztvm_encrypt_des
</UL>

<P><STRONG><a name="[291]"></a>expand</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, app_sn.o(i.expand))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = expand
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ztvm_encrypt_undes
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ztvm_encrypt_des
</UL>

<P><STRONG><a name="[292]"></a>setkey</STRONG> (Thumb, 170 bytes, Stack size 20 bytes, app_sn.o(i.setkey))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = setkey
</UL>
<BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ztvm_encrypt_undes
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ztvm_encrypt_des
</UL>

<P><STRONG><a name="[76]"></a>ADC_ConversionStop</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32l0xx_hal_adc.o(i.ADC_ConversionStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_ConversionStop
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Stop
</UL>

<P><STRONG><a name="[78]"></a>ADC_DelayMicroSecond</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, stm32l0xx_hal_adc.o(i.ADC_DelayMicroSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ADC_DelayMicroSecond &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>

<P><STRONG><a name="[79]"></a>ADC_Disable</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, stm32l0xx_hal_adc.o(i.ADC_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_Disable
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Stop
</UL>

<P><STRONG><a name="[7a]"></a>ADC_Enable</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, stm32l0xx_hal_adc.o(i.ADC_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ADC_Enable &rArr; ADC_DelayMicroSecond &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DelayMicroSecond
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start
</UL>

<P><STRONG><a name="[87]"></a>FLASH_SetErrorCode</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, stm32l0xx_hal_flash.o(i.FLASH_SetErrorCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_SetErrorCode
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[94]"></a>DMA_SetConfig</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, stm32l0xx_hal_dma.o(i.DMA_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[a2]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, stm32l0xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[28]"></a>UART_DMAAbortOnError</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32l0xx_hal_uart.o(i.UART_DMAAbortOnError))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = UART_DMAAbortOnError &rArr; HAL_UART_ErrorCallback &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l0xx_hal_uart.o(i.HAL_UART_IRQHandler)
</UL>
<P><STRONG><a name="[2b]"></a>UART_DMAError</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32l0xx_hal_uart.o(i.UART_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = UART_DMAError &rArr; HAL_UART_ErrorCallback &rArr; LogPrintf &rArr; LogMessageWL &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndTxTransfer
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l0xx_hal_uart.o(i.UART_Start_Receive_DMA)
</UL>
<P><STRONG><a name="[29]"></a>UART_DMAReceiveCplt</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, stm32l0xx_hal_uart.o(i.UART_DMAReceiveCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = UART_DMAReceiveCplt &rArr; HAL_UART_RxCpltCallback &rArr; LogMessage &rArr; portUartSend &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l0xx_hal_uart.o(i.UART_Start_Receive_DMA)
</UL>
<P><STRONG><a name="[2a]"></a>UART_DMARxHalfCplt</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32l0xx_hal_uart.o(i.UART_DMARxHalfCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_DMARxHalfCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxHalfCpltCallback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32l0xx_hal_uart.o(i.UART_Start_Receive_DMA)
</UL>
<P><STRONG><a name="[c4]"></a>UART_EndRxTransfer</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.UART_EndRxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DMAStop
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAError
</UL>

<P><STRONG><a name="[c3]"></a>UART_EndTxTransfer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32l0xx_hal_uart.o(i.UART_EndTxTransfer))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_DMAStop
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAError
</UL>

<P><STRONG><a name="[113]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[105]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[116]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[115]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2c]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0sprintf)
<LI> printfa.o(i.__0vsprintf)
</UL>
<P><STRONG><a name="[69]"></a>_local_sscanf</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>

<P><STRONG><a name="[70]"></a>_fp_value</STRONG> (Thumb, 286 bytes, Stack size 72 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
